<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Thos object is not shown, it contains the code for right clicking on the map screen. It creates an instance and records
//its information in an ini file. This is only currenlty setup for the normal Map, to add to Mythial, the code will need to 
//altered to add the RoomMyhical to the if statement.

//ini location - c:/users/#YourName#/appdata/Local/Editor - we should be able to change this, I haven't tried yet.
if(room == RoomMap)
{
    LocationX = mouse_x; //current mouse x position
    LocationY = mouse_y; //current mouse y position
    var inst; //creates a temp variable 
    currRef= string(global.TotalInstanceNum) //sets the currRef variable to a string of the global TotalInstanceNumber, this is the number of instances currently used
    locationName = "Location"+currRef //this sets lcoation name to "location#REF#"
    inst = instance_create(LocationX,LocationY,BuildingObject); //creates an instance at the mouse position, using the test building object
    ini_open("test.ini"); //opens the ini file1
    ini_write_real(locationName,"InstanceRef",instance_id[global.TotalInstanceNum]); //writes the instance number (global TotalInstanceNum) to "instanceRef" inside the ini file
    ini_write_real(locationName,"NumRef",global.TotalInstanceNum); //sets NumRef inside the ini file (used for comparing instances later)
    ini_write_real(locationName,"X",LocationX); //X pos
    ini_write_real(locationName,"Y",LocationY); //Y pos
    ini_write_real(locationName,"Mythical",global.myth);//Current mythical state (0,1)
    
    ini_close();//close the ini file
    
    global.TotalInstanceNum += 1; //increase the global TotalInstanceNum by 1, this means the next location added will be the next instance
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    var inst;
    global.TotalInstanceNum = 100;//sets global Num to 100 (100 is max istance ammount)
    for(i = 0; i &lt; global.TotalInstanceNum; i++) 
    {
        currRef = string(i)//sets currRef to the current loop iteration in string format
        locationName = "Location"+currRef//writes "Location#loopREF#" to a variable
        ini_open("test.ini"); //opens the ini file
        if(ini_section_exists(locationName)==true) //checks the ini file for the location name (Location#REF#) using the current loop iteration, if it exits it will continue
        {
            LocationX = ini_read_real(locationName,"X",0)//reads the x location in the ini file, and sets that to a variable
            LocationY = ini_read_real(locationName,"Y",0)//reads the y location in the ini file, and sets that to a variable
            inst = instance_create(LocationX,LocationY,BuildingObject);  //creats an instance at the location using the object
            ini_close(); //closes the ini file
        }
        else //if the location doesn't exist (IE max locations stored have been written), move set the totalInstanceNumber to the current loop number.
        {
            global.TotalInstanceNum = i;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
