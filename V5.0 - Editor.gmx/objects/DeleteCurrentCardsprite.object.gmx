<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ButtonSpriteDeleteCardSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tempRoom = room;
if(global.RoomState == 3)
    sprite_index = No_sprite;
if(global.RoomState == 0 and global.totalEventCardSprites &gt; 0 and global.cardSprite != -1)
{
    for(i = global.cardSprite; i &lt; global.totalEventCardSprites; i++)
    {
        file_delete("editor_files/sprites/EventCardSprite"+string(i)+".png");
        sprite_delete("EventCardSprite"+string(i)+".png");
        if(!sprite_exists("EventCardSprite"+string(i)+".png") and file_exists("editor_files/sprites/EventCardSprite"+string(i+1)+".png"))
        {
            file_rename("editor_files/sprites/EventCardSprite"+string(i+1)+".png","editor_files/sprites/EventCardSprite"+string(i)+".png");
            global.eventCardSpriteArray[i] = sprite_add("editor_files/sprites/EventCardSprite"+string(i)+".png",1,false,true,0,0);//creates the sprite using image above
            sprite_set_offset(global.eventCardSpriteArray[i],sprite_get_width(global.eventCardSpriteArray[i])/2,sprite_get_height(global.eventCardSpriteArray[i])/2)
            sprite_delete("EventCardSprite"+string(i+1)+".png");
        }
    }
    for(i = 1; i &lt;= global.totalEventCards; i++)
    {
        ini_open(global.cardEventINI);
        cardName = "Event"+string(i);
        tempRef = ini_read_real(cardName,"Sprite",-1);
        if(tempRef == global.cardSprite)
        {
            tempRef = -1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        if(tempRef &gt; global.cardSprite)
        {
            tempRef -= 1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        ini_close();

    }
        global.cardSprite = -1;
        global.totalEventCardSprites -= 1;
        ini_open(global.editorINI);
        ini_write_real("General", "Event Card Sprites", global.totalEventCardSprites);
        ini_close();
}
if(global.RoomState == 1 and global.totalActionCardSprites &gt; 0 and global.cardSprite != -1)
{
    for(i = global.cardSprite; i &lt; global.totalActionCardSprites; i++)
    {
        file_delete("editor_files/sprites/ActionCardSprite"+string(i)+".png");
        sprite_delete("ActionCardSprite"+string(i)+".png");
        if(!sprite_exists("ActionCardSprite"+string(i)+".png") and file_exists("editor_files/sprites/ActionCardSprite"+string(i+1)+".png"))
        {
            file_rename("editor_files/sprites/ActionCardSprite"+string(i+1)+".png","editor_files/sprites/ActionCardSprite"+string(i)+".png");
            global.actionCardSpriteArray[i] = sprite_add("editor_files/sprites/ActionCardSprite"+string(i)+".png",1,false,true,0,0);//creates the sprite using image above
            sprite_set_offset(global.actionCardSpriteArray[i],sprite_get_width(global.actionCardSpriteArray[i])/2,sprite_get_height(global.actionCardSpriteArray[i])/2)
            sprite_delete("ActionCardSprite"+string(i+1)+".png");
        }
    }
    for(i = 1; i &lt;= global.totalActionCards; i++)
    {
        ini_open(global.cardActionINI);
        cardName = "Action"+string(i);
        tempRef = ini_read_real(cardName,"Sprite",-1);
        if(tempRef == global.cardSprite)
        {
            tempRef = -1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        if(tempRef &gt; global.cardSprite)
        {
            tempRef -= 1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
            ini_close();
    }

        global.cardSprite = -1;
        global.totalActionCardSprites -= 1;
        ini_open(global.editorINI);
        ini_write_real("General", "Action Card Sprites", global.totalActionCardSprites);
        ini_close();
}
if(global.RoomState == 2 and global.totalConsCardSprites &gt; 0 and global.cardSprite != -1)
{
    for(i = global.cardSprite; i &lt; global.totalConsCardSprites; i++)
    {
        file_delete("editor_files/sprites/ConsCardSprite"+string(i)+".png");
        sprite_delete("ConsCardSprite"+string(i)+".png");
        if(!sprite_exists("ConsCardSprite"+string(i)+".png") and file_exists("editor_files/sprites/ConsCardSprite"+string(i+1)+".png"))
        {
            file_rename("editor_files/sprites/ConsCardSprite"+string(i+1)+".png","editor_files/sprites/ConsCardSprite"+string(i)+".png");
            global.consCardSpriteArray[i] = sprite_add("editor_files/sprites/ConsCardSprite"+string(i)+".png",1,false,true,0,0);//creates the sprite using image above
            sprite_set_offset(global.consCardSpriteArray[i],sprite_get_width(global.consCardSpriteArray[i])/2,sprite_get_height(global.consCardSpriteArray[i])/2)
            sprite_delete("ConsCardSprite"+string(i+1)+".png");
        }
    }
    for(i = 1; i &lt;= global.totalConsCards; i++)
    {
        ini_open(global.cardConsINI);
        cardName = "Cons"+string(i);
        tempRef = ini_read_real(cardName,"Sprite",-1);
        if(tempRef == global.cardSprite)
        {
            tempRef = -1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        if(tempRef &gt; global.cardSprite)
        {
            tempRef -= 1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        ini_close();
    }

        global.cardSprite = -1;
        global.totalConsCardSprites -= 1;
        ini_open(global.editorINI);
        ini_write_real("General", "Cons Card Sprites", global.totalConsCardSprites);
        ini_close();
}
if(global.RoomState == 3 and global.totalInfoCardSprites &gt; 0 and global.cardSprite != -1)
{
    for(i = global.cardSprite; i &lt; global.totalInfoCardSprites; i++)
    {
        file_delete("editor_files/sprites/InfoCardSprite"+string(i)+".png");
        sprite_delete("InfoCardSprite"+string(i)+".png");
        if(!sprite_exists("InfoCardSprite"+string(i)+".png") and file_exists("editor_files/sprites/InfoCardSprite"+string(i+1)+".png"))
        {
            file_rename("editor_files/sprites/InfoCardSprite"+string(i+1)+".png","editor_files/sprites/InfoCardSprite"+string(i)+".png");
            global.infoCardSpriteArray[i] = sprite_add("editor_files/sprites/InfoCardSprite"+string(i)+".png",1,false,true,0,0);//creates the sprite using image above
            sprite_set_offset(global.infoCardSpriteArray[i],sprite_get_width(global.infoCardSpriteArray[i])/2,sprite_get_height(global.infoCardSpriteArray[i])/2)
            sprite_delete("InfoCardSprite"+string(i+1)+".png");
        }
    }
    for(i = 1; i &lt;= global.totalInfoCards; i++)
    {
        ini_open(global.cardInfoINI);
        cardName = "Info"+string(i);
        tempRef = ini_read_real(cardName,"Sprite",-1);
        if(tempRef == global.cardSprite)
        {
            tempRef = -1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        if(tempRef &gt; global.cardSprite)
        {
            tempRef -= 1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        ini_close();
    }

        global.cardSprite = -1;
        global.totalInfoCardSprites -= 1;
        ini_open(global.editorINI);
        ini_write_real("General", "Info Card Sprites", global.totalInfoCardSprites);
        ini_close();
}
if(global.RoomState == 4 and global.totalCharCardSprites &gt; 0 and global.cardSprite != -1)
{
    for(i = global.cardSprite; i &lt; global.totalCharCardSprites; i++)
    {
        file_delete("editor_files/sprites/CharCardSprite"+string(i)+".png");
        sprite_delete("CharCardSprite"+string(i)+".png");
        if(!sprite_exists("CharCardSprite"+string(i)+".png") and file_exists("editor_files/sprites/CharCardSprite"+string(i+1)+".png"))
        {
            file_rename("editor_files/sprites/CharCardSprite"+string(i+1)+".png","editor_files/sprites/CharCardSprite"+string(i)+".png");
            global.charCardSpriteArray[i] = sprite_add("editor_files/sprites/CharCardSprite"+string(i)+".png",1,false,true,0,0);//creates the sprite using image above
            sprite_set_offset(global.charCardSpriteArray[i],sprite_get_width(global.charCardSpriteArray[i])/2,sprite_get_height(global.charCardSpriteArray[i])/2)
            sprite_delete("CharCardSprite"+string(i+1)+".png");
        }
    }
    for(i = 1; i &lt;= global.totalCharCards; i++)
    {
        ini_open(global.cardConsINI);
        cardName = "Char"+string(i);
        tempRef = ini_read_real(cardName,"Sprite",-1);
        if(tempRef == global.cardSprite)
        {
            tempRef = -1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        if(tempRef &gt; global.cardSprite)
        {
            tempRef -= 1;
            ini_write_real(cardName,"Sprite", tempRef);
        }
        ini_close();
    }

        global.cardSprite = -1;
        global.totalCharCardSprites -= 1;
        ini_open(global.editorINI);
        ini_write_real("General", "Char Card Sprites", global.totalCharCardSprites);
        ini_close();
}
room = tempRoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
