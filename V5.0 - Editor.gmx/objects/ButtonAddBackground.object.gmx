<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ButtonSpriteAddBackground</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = global.roomWidth /2;
y = global.roomHeight /2-50;
Background = "";
BackgroundF = "";
BackgroundN = "";
BackgroundFN = "";
BackgroundS = "";
BackgroundFS = "";

tempRoom = room;
background_xscale[0] = 1 * ((room_width) / background_width[0]);
background_yscale[0] = 1 * ((room_height) / background_height[0]);
background_xscale[1] = 1 * ((room_width) / background_width[0]);
background_yscale[1] = 1 * ((room_height) / background_height[0]);
background_xscale[2] = 1 * ((room_width) / background_width[0]);
background_yscale[2] = 1 * ((room_height) / background_height[0]);
background_xscale[3] = 1 * ((room_width) / background_width[0]);
background_yscale[3] = 1 * ((room_height) / background_height[0]);
background_xscale[4] = 1 * ((room_width) / background_width[0]);
background_yscale[4] = 1 * ((room_height) / background_height[0]);
background_xscale[5] = 1 * ((room_width) / background_width[0]);
background_yscale[5] = 1 * ((room_height) / background_height[0]);
if(room == RoomMenu and global.BackgroundSetup == false)
    sprite_index = No_sprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomMenu)
    BackgroundS = show_message_async("Please select a 'Tap to Start' splash background"); 
else
    Background = show_message_async("Please select a background to use");
                
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i_d = ds_map_find_value(async_load,"id");

if(i_d == BackgroundS)
{
    BackgroundFS = get_open_filename("PNG|*.png", "");//opens the file
    if(BackgroundFS != "")//if it finds a file, do this
    {    
        BackgroundN = show_message_async("Please select a 'Click to Start' splash background"); 
        BackgroundS = "";
    }
    else
    {
        show_message_async("Splash backgrounds failed to uploaded.");
    }    
}
if(i_d == BackgroundN)
{
    BackgroundFN = get_open_filename("PNG|*.png", "");//opens the file
    if(BackgroundFN != "")
    {
       show_message_async("Splash backgrounds uploaded."); 
    }
    else
    {
        show_message_async("Splash backgrounds failed to uploaded.");
    }
}
if(i_d == Background)
{
    BackgroundF = get_open_filename("PNG|*.png", "");//opens the file
    if(BackgroundF != "")
    {
       show_message_async("Background uploaded."); 
    }
    else
    {
        show_message_async("Background failed to uploaded.");
    }
}
    if(BackgroundF != "")
    {
        if(room == RoomCharacter)
        {        
            spriteName = "CharacterBackground"
            global.CharacterBG = background_add(BackgroundF,0,0);
            background_save(global.CharacterBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
            global.CharacterBGing = 1;
            room_set_background(RoomCharacter, 0, 1, 0, global.CharacterBG, 0, 0, 0, 0, 0, 0, 1);
            global.CharacterBG = "";
            Background = "";
    
        }
        if(room == RoomPlayerMenu)
        {
            spriteName = "MenuBackground"
             global.PlayerMenuBG = background_add(BackgroundF,0,0);
            background_save(global.PlayerMenuBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
            global.PlayerMenuBGing = 1;
    
             room_set_background(RoomPlayerMenu, 0, 1, 0, global.PlayerMenuBG, 0, 0, 0, 0, 0, 0, 1);
             global.PlayerMenuBG = "";
          Background = "";
        }
        if(room == RoomDiary)
        {
            spriteName = "DiaryBackground"
             global.DiaryBG = background_add(BackgroundF,0,0);
            background_save(global.DiaryBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
            global.DiaryBGing = 1;
    
             room_set_background(RoomDiary, 0, 1, 0, global.DiaryBG, 0, 0, 0, 0, 0, 0, 1);
             global.DiaryBG = "";
          Background = "";
    
        }
        if(room == RoomNewGame)
        {
            spriteName = "NewGameBackground"
             global.NewGBG = background_add(BackgroundF,0,0);
            background_save(global.NewGBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
            global.NewGBGing = 1;
    
             room_set_background(RoomNewGame, 0, 1, 0, global.NewGBG, 0, 0, 0, 0, 0, 0, 1);
             global.NewGBG = "";
          Background = "";
    
        }
        if(room == RoomCards)
        {
            if(global.RoomState == -1)
            {
                spriteName = "CardsBackground"
             global.CardsBG = background_add(BackgroundF,0,0);
                        background_save(global.CardsBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
            global.CardsBGing = 1;
    
             room_set_background(RoomCards, 0, 1, 0, global.CardsBG, 0, 0, 0, 0, 0, 0, 1);
             global.CardsBG = "";
          Background = "";
            }
    
    
            if(global.RoomState == 0)
            {
                spriteName = "EventCardBackground"
                    global.EventCardBG = background_add(BackgroundF,0,0);
                background_save( global.EventCardBG, "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
                global.EventCardBGing = 1;
    
                room_set_background(RoomCards, 1, 1, 0, global.EventCardBG, 0, 0, 0, 0, 0, 0, 1);
                 room_set_background(RoomCardEdit, 0, 1, 0, global.EventCardBG, 0, 0, 0, 0, 0, 0, 1);
                room_set_background(RoomCardDeck, 0, 1, 0, global.EventCardBG, 0, 0, 0, 0, 0, 0, 1);
                
             global.EventCardBG = "";
          Background = "";
            }   
            if(global.RoomState == 1)
            {
                spriteName = "ActionCardBackground"
                            global.ActionCardBG = background_add(BackgroundF,0,0);
                            background_save(global.ActionCardBG, "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
                global.ActionCardBGing = 1;
    
                room_set_background(RoomCards, 2, 1, 0, global.ActionCardBG, 0, 0, 0, 0, 0, 0, 1);
                 room_set_background(RoomCardEdit, 1, 1, 0, global.ActionCardBG, 0, 0, 0, 0, 0, 0, 1);
                room_set_background(RoomCardDeck, 1, 1, 0, global.ActionCardBG, 0, 0, 0, 0, 0, 0, 1);
             global.ActionCardBG = "";
          Background = "";
            }     
            if(global.RoomState == 2)
            {
                spriteName = "ConsCardBackground"
                            global.ConsCardBG = background_add(BackgroundF,0,0);
                            background_save(global.ConsCardBG, "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
                global.ConsCardBGing = 1;
    
                room_set_background(RoomCards, 3, 1, 0, global.ConsCardBG, 0, 0, 0, 0, 0, 0, 1);
                 room_set_background(RoomCardEdit, 2, 1, 0, global.ConsCardBG, 0, 0, 0, 0, 0, 0, 1);
                room_set_background(RoomCardDeck, 2, 1, 0, global.ConsCardBG, 0, 0, 0, 0, 0, 0, 1);
             global.ConsCardBG = "";
          Background = "";
        
            }   
            if(global.RoomState == 3)
            {
                spriteName = "InfoCardBackground"
                            global.InfoCardBG = background_add(BackgroundF,0,0);
                            background_save(global.InfoCardBG, "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
                global.InfoCardBGing = 1;
    
                room_set_background(RoomCards, 4, 1, 0, global.InfoCardBG, 0, 0, 0, 0, 0, 0, 1);
                 room_set_background(RoomCardEdit, 3, 1, 0, global.InfoCardBG, 0, 0, 0, 0, 0, 0, 1);
                room_set_background(RoomCardDeck, 3, 1, 0, global.InfoCardBG, 0, 0, 0, 0, 0, 0, 1);
             global.InfoCardBG = "";
          Background = "";
            }   
            if(global.RoomState == 4)
            {
                spriteName = "CharCardBackground"
                            global.CharCardBG = background_add(BackgroundF,0,0);
                            background_save(global.CharCardBG, "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
                global.CharCardBGing = 1;
    
                room_set_background(RoomCards, 5, 1, 0, global.CharCardBG, 0, 0, 0, 0, 0, 0, 1);
                 room_set_background(RoomCardEdit, 4, 1, 0, global.CharCardBG, 0, 0, 0, 0, 0, 0, 1);
                room_set_background(RoomCardDeck, 4, 1, 0, global.CharCardBG, 0, 0, 0, 0, 0, 0, 1);
             global.CharCardBG = "";
          Background = "";
            }   
        }  
    }

if(BackgroundFN != "")
{    
    spriteName = "SplashBackground"
    global.MenuBG = background_add(BackgroundFS,0,0);
    background_save(global.MenuBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files

    BackgroundS = "";
    spriteName = "SplashClickBackground"
    global.MenuClickBG = background_add(BackgroundFN,0,0);
    background_save(global.MenuClickBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
    room_set_background(RoomMenu, 0, 1, 0, global.MenuClickBG, 0, 0, 0, 0, 0, 0, 1);
    global.MenuBGing = 1;
    global.MenuBG = "";
    global.MenuClickBG = "";
    BackgroundN = "";

}   
if(room == RoomCharacter and ButtonDeleteBackground.BackgroundD != "")
{
    if(i_d == ButtonDeleteBackground.BackgroundD)
    {
        if ds_map_find_value(async_load, "status")
        {
            file_delete("editor_files/BG/CharacterBackground.png");
            global.CharacterBGing = 0;
            room_set_background(RoomCharacter, 0, 1, 0, CharacterScreen_Background, 0, 0, 1, 1, 0, 0, 1);
            show_message_async("File deleted"); 
            ButtonDeleteBackground.BackgroundD = "";
        }
    }

}
if(room == RoomNewGame and ButtonDeleteBackground.BackgroundD != "")
{
    if(i_d == ButtonDeleteBackground.BackgroundD)
    {
        if ds_map_find_value(async_load, "status")
        {
            file_delete("editor_files/BG/NewGameBackground.png");
            global.NewGBGing = 0;
            room_set_background(RoomNewGame, 0, 1, 0, MenuBackground, 0, 0, 1, 1, 0, 0, 1);
            show_message_async("File deleted"); 
            ButtonDeleteBackground.BackgroundD = "";
        }
    }

}
if(room == RoomDiary and ButtonDeleteBackground.BackgroundD != "")
{
    if(i_d == ButtonDeleteBackground.BackgroundD)
    {
        if ds_map_find_value(async_load, "status")
        {
            file_delete("editor_files/BG/DiaryBackground.png");
            global.DiaryBGing = 0;
            room_set_background(RoomDiary, 0, 1, 0, JournalScreen_Background, 0, 0, 1, 1, 0, 0, 1);
            show_message_async("File deleted"); 
            ButtonDeleteBackground.BackgroundD = "";
        }
    }
}
if(room == RoomMenu and ButtonDeleteBackground.BackgroundD != "")
{
    if(i_d == ButtonDeleteBackground.BackgroundD)
    {
        if ds_map_find_value(async_load, "status")
        {
            file_delete("editor_files/BG/SplashBackground.png");
            file_delete("editor_files/BG/SplashClickBackground.png");
            global.MenuBGing = 0;
            room_set_background(RoomMenu, 0, 1, 0, MainMenuBackground, 0, 0, 1, 1, 0, 0, 1);
            show_message_async("File deleted"); 
            ButtonDeleteBackground.BackgroundD = "";
        }
    }
}
if(room == RoomPlayerMenu and ButtonDeleteBackground.BackgroundD != "")
{
    if(i_d == ButtonDeleteBackground.BackgroundD)
    {
        if ds_map_find_value(async_load, "status")
        {
            file_delete("editor_files/BG/MenuBackground.png");
            global.PlayerMenuBGing = 0;
            room_set_background(RoomPlayerMenu, 0, 1, 0, MenuBackground, 0, 0, 1, 1, 0, 0, 1);
            show_message_async("File deleted"); 
            ButtonDeleteBackground.BackgroundD = "";
        }
    }
}
if(room == RoomCards and ButtonDeleteBackground.BackgroundD != "")
{
    if(global.RoomState == -1)
    {
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
                file_delete("editor_files/BG/CardsBackground.png");
                global.CardsBGing = 0;
                room_set_background(RoomCards, 0, 1, 0, CharacterScreen_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted"); 
                ButtonDeleteBackground.BackgroundD = "";
            }
        }
    }

    if(global.RoomState == 0)
    {
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
                file_delete("editor_files/BG/EventCardBackground.png");
                global.EventCardBGing = 0;
                room_set_background(RoomCards, 1, 1, 0, EventCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardEdit, 0, 1, 0, EventCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardDeck, 0, 1, 0, EventCard_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted");
                ButtonDeleteBackground.BackgroundD = "";    
            }
        }
    }   
    if(global.RoomState == 1)
    {
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
               file_delete("editor_files/BG/ActionCardBackground.png");
                global.ActionCardBGing = 0;
                room_set_background(RoomCards, 2, 1, 0, ActionCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardEdit, 1, 1, 0, ActionCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardDeck, 1, 1, 0, ActionCard_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted"); 
                ButtonDeleteBackground.BackgroundD = "";
            }
        }    
    }     
    if(global.RoomState == 2)
    {        
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
                file_delete("editor_files/BG/ConsCardBackground.png");
                global.ConsCardBGing = 0;
                room_set_background(RoomCards, 3, 1, 0, ConsequenceCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardEdit, 2, 1, 0, ConsequenceCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardDeck, 2, 1, 0, ConsequenceCard_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted"); 
                ButtonDeleteBackground.BackgroundD = "";
            }
        } 
    }  
    if(global.RoomState == 3)
    {
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
                file_delete("editor_files/BG/InfoCardBackground.png");
                global.InfoCardBGing = 0;
                room_set_background(RoomCards, 4, 1, 0, InfoCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardEdit, 3, 1, 0, InfoCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardDeck, 3, 1, 0, InfoCard_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted"); 
                ButtonDeleteBackground.BackgroundD = "";
            }
        }   
    }
    if(global.RoomState == 4)
    {        
        if(i_d == ButtonDeleteBackground.BackgroundD)
        {
            if ds_map_find_value(async_load, "status")
            {
                file_delete("editor_files/BG/CharCardBackground.png");
                global.CharCardBGing = 0;
                room_set_background(RoomCards, 5, 1, 0, CharacterCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardEdit, 4, 1, 0, CharacterCard_Background, 0, 0, 1, 1, 0, 0, 1);
                room_set_background(RoomCardDeck, 4, 1, 0, CharacterCard_Background, 0, 0, 1, 1, 0, 0, 1);
                show_message_async("File deleted"); 
                ButtonDeleteBackground.BackgroundD = "";
            }
        }
    }  

}    
if(BackgroundN == "" and BackgroundS == "" and  Background == "" and ButtonDeleteBackground.BackgroundD == "")
{  
    ini_open(global.editorINI);//opens the editorINI
    ini_write_real("General","Character Background",global.CharacterBGing);
    ini_write_real("General","Diary Background",global.DiaryBGing);
    ini_write_real("General","Cards Background",global.CardsBGing);
    ini_write_real("General","Menu Background",global.MenuBGing);
    ini_write_real("General","New Game Background",global.NewGBGing);
    ini_write_real("General","Player Menu Background",global.PlayerMenuBGing);      
    ini_write_real("General","Event Cards Background",global.EventCardBGing);
    ini_write_real("General","Action Cards Background",global.ActionCardBGing);
    ini_write_real("General","Cons Cards Background",global.ConsCardBGing);
    ini_write_real("General","Info Cards Background",global.InfoCardBGing);
    ini_write_real("General","Char Cards Background",global.CharCardBGing);
    ini_close();//closes the ini
    room = tempRoom;//reloads the room
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
