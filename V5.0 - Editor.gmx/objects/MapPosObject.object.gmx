<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when the room ends
global.currentX = view_xview//sets the current x/y position global variable to the current x/yview (view position on map screen)
global.currentY = view_yview
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when the room starts
view_xview = global.currentX //set the current view to the view stored in global current x/y
view_yview = global.currentY  

view_wview[0] = global.roomWidth * global.zoom //set the view width/height to the global variable roomWidth/roomHeight, this is set when the game starts and the player changes the screen size using options
view_hview[0] = global.roomHeight * global.zoom
global.mapInstanceCount = instance_count;
//the following code sets the default positions of the buttons, set in the buttons creation code
//this adds that position to the current view of the screen to keep them in the right place.
view_wview[0] = global.roomWidth * global.zoom //set the view width/height to the global variable roomWidth/roomHeight, this is set when the game starts and the player changes the screen size using options
view_hview[0] = global.roomHeight * global.zoom
editorModeDisplay.x = view_xview + global.editorModeDisplayX* global.zoom;//editor mode hud element
editorModeDisplay.y = view_yview + global.editorModeDisplayY* global.zoom;
ButtonYearLeft.x = view_xview + global.YearLeftButtonX* global.zoom;//left arrow button
ButtonYearLeft.y = view_yview + global.YearLeftButtonY* global.zoom;
ButtonYearRight.x = view_xview + global.YearRightButtonX* global.zoom;//right arrow button
ButtonYearRight.y = view_yview + global.YearRightButtonY* global.zoom;
ButtonWeekLeft.x = view_xview + global.WeekLeftButtonX* global.zoom;//left arrow button
ButtonWeekLeft.y = view_yview + global.WeekLeftButtonY* global.zoom;
ButtonWeekRight.x = view_xview + global.WeekRightButtonX* global.zoom;//right arrow button
ButtonWeekRight.y = view_yview + global.WeekRightButtonY* global.zoom;
TextOnMap.x = view_xview + global.TextOnMapX* global.zoom;
TextOnMap.y = view_yview + global.TextOnMapY* global.zoom;
ButtonCharacter.x = view_xview + global.CharacterButtonX * global.zoom;
ButtonCharacter.y = view_yview + global.CharacterButtonY * global.zoom;
for(i = 0; i &lt; instance_number(TextInputBox); i++)
{
    global.textboxArray[i].x = view_xview + global.mapInputBoxX * global.zoom;
    global.textboxArray[i].y = view_yview + ((global.tempInputBoxY-(9*25))+(i*25)) * global.zoom;  
    global.textboxArray[i].image_xscale =  global.textBoxXScale * global.zoom;
    global.textboxArray[i].image_yscale = global.zoom;     
}
editorModeDisplay.image_xscale = global.zoom;
editorModeDisplay.image_yscale = global.zoom;
ButtonYearLeft.image_xscale = global.zoom;
ButtonYearLeft.image_yscale = global.zoom;
ButtonYearRight.image_xscale = global.zoom;
ButtonYearRight.image_yscale = global.zoom;
ButtonWeekLeft.image_xscale = global.zoom;
ButtonWeekLeft.image_yscale = global.zoom;
ButtonWeekRight.image_xscale = global.zoom;
ButtonWeekRight.image_yscale = global.zoom;
TextOnMap.image_xscale = global.zoom;
TextOnMap.image_yscale = global.zoom;
ButtonCharacter.image_xscale = global.zoom;
ButtonCharacter.image_yscale = global.zoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
