<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>CardBackingNormal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomCardEdit)
{
    x = global.roomWidth - 375;
    y = global.roomHeight /2;
}
if(room == RoomSprites)
{
    x = 375;
    y = global.roomHeight /2- 100;
}
depth = 2;
inst = instance_create(x,y- 72,CardSpriteObject);
Mythical = global.tempCardBackMythStatus;
if(room != RoomSprites)
{
    if(global.RoomState != 3)
        inst2 = instance_create(x,y + 176, ButtonInfoLink);
    if(global.RoomState == 0)
    {
        ref_display = global.eventRef;
        Mythical = global.eventMythical;
    }
    if(global.RoomState == 1)
    {

        ref_display = global.cardRef;
        Mythical = global.cardMythical;
    }
    if(global.RoomState == 2)
    {
        ref_display = global.consCardRef;
    }
    if(global.RoomState == 3)
    {
        ref_display = global.infoCardRef;
    }
    if(global.RoomState == 4)
    {
        ref_display = global.charCardRef;
    }
}

if(Mythical == 0)
{
    if(global.normalCardBacking != 0)
    {
        sprite_index = global.normalCardBack;
        if(global.RoomState == 3)
            sprite_index = global.normalInfoCardBack;
    }
    else
    {
        if(global.RoomState == 3)
            sprite_index = CardBackingNormalInfo;
        else
            sprite_index = CardBackingNormal;
    }
}
if(Mythical == 1)
{
    if(global.mythCardBacking != 0)
    {
        sprite_index = global.mythCardBack;
        if(global.RoomState == 3)
            sprite_index = global.mythInfoCardBack;
    }
    else
    {
        if(global.RoomState == 3)
            sprite_index = CardBackingMythInfo;
        else
            sprite_index = CardBackingMyth;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomCardDeck)//deck of cards
{
    if(global.RoomState == 0)
    {
        if(global.lastRoom == RoomLocationAdd)//if your selecting the card
        {
            global.tempPos = 0; //creates the tempPos variable used for when a list is goes off screen and needs to be moved by x amount.
            //this opens the location ini, and updates the type section inside
            global.eventType = id.ref_display;//takes the ref displayed
            ini_open(global.locationINI);//opens locatio ini
            s = string(global.EventID);//creates a string using the eventID
            eventType = "Event"+s+"Type";//creates a eventname using type and the string above
            ini_write_real(global.tempLocation,eventType,global.eventType);//writes the info to the ini
            ini_write_real(global.tempLocation,"Mythical", global.locationMyth);
            ini_close();//closes the ini
            room = RoomLocationAdd;
            
        }
        else//if you are editing the card
        {
            global.eventRef = id.ref_display;//takes the ref displayed in this instance, and sets it to the global eventRef
            global.lastState = 0;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//changes room         
        }

    }
    if(global.RoomState == 1)
    {
        if(global.lastState == 0)//selecing the card
        {
           //writes the cards type to the event inside the event ini file
            global.cardType = id.ref_display;//sets the ref to "cardtype"
            ini_open(global.cardEventINI);//open the event ini
            s = string(global.currentCard);
            cardToUpdate = "Action"+s;
            if(global.edit == 0)
            {
                global.eventActionCardsNum = ini_read_real(global.eventName,"Action Cards",0);
                if( global.eventActionCardsNum &lt; 2)
                global.eventActionCardsNum += 1;
                ini_write_real(global.eventName,"Action Cards",global.eventActionCardsNum);
            }
            ini_write_real(global.eventName,cardToUpdate,global.cardType);
            ini_close();//closes the ini
            global.lastState = 1;
            global.RoomState = 0;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//reads the "lastroom" variable and sets that to room
        }
        else //editing the card
        {
            global.cardRef = id.ref_display;
            global.lastState = 1;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//changes room      
        }

    }
    if(global.RoomState == 2)
    {
        if(global.lastState == 1)//selecing the card
        {
       //writes the cards type to the event inside the event ini file
            global.cardType = id.ref_display;//sets the ref to "cardtype"
            ini_open(global.cardActionINI);//open the event ini
            ini_write_real(global.cardName,"Cons Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 2;
            global.RoomState = 1;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//reads the "lastroom" variable and sets that to room
        }
        else //editing the card
        {
            global.consCardRef = id.ref_display;
            global.lastState = 2;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//changes room       
        }   
    }
    if(global.RoomState == 3)
    {
        if(global.lastState == 0)//selecing the card
        {
              //writes the cards type to the event inside the event ini file
            global.cardType = id.ref_display;//sets the ref to "cardtype"
            ini_open(global.cardEventINI);//open the event ini
            ini_write_real(global.eventName,"Info Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 3;
            global.RoomState = 0;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//reads the "lastroom" variable and sets that to room
        }
        else if(global.lastState == 1)
        {
             global.cardType = id.ref_display;
            ini_open(global.cardActionINI);//open the event ini               
            ini_write_real(global.cardName,"Info Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 3;
            global.RoomState = 1;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;
        }
        else if(global.lastState == 4)
        {
            global.cardType = id.ref_display;
            ini_open(global.cardCharINI);//open the event ini               
            ini_write_real(global.charName,"Info Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 3;
            global.RoomState = 4;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;
        }
        else if(global.lastState == 2)
        {
            global.cardType = id.ref_display;
            ini_open(global.cardConsINI);//open the event ini               
            ini_write_real(global.consName,"Info Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 3;
            global.RoomState = 2;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;
        }

        else //editing the card
        {
            global.infoCardRef = id.ref_display;
            global.lastState = 3;
            global.lastRoom = RoomCardDeck; 
            room = RoomCardEdit;//changes room      
        }    
    }   
    if(global.RoomState == 4)
    {
        if(global.lastState == 0)//selecing the card
        {
            //writes the cards type to the event inside the event ini file
            global.cardType = id.ref_display;//sets the ref to "cardtype"
            ini_open(global.cardEventINI);//open the event ini
            ini_write_real(global.eventName,"Char Cards",global.cardType);
            ini_close();//closes the ini
            global.lastState = 4;
            global.RoomState = 0;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//reads the "lastroom" variable and sets that to room
        }
        
        else if(global.lastState == -1) //editing the card
        {
            global.charCardRef = id.ref_display;
            global.lastState = 4;
            global.lastRoom = RoomCardDeck;
            room = RoomCardEdit;//changes room       
        }   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
