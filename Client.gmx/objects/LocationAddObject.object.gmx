<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    var inst;
    global.TotalInstanceNum = 100;//sets global Num to 100 (100 is max istance ammount)
    for(i = 0; i &lt; global.TotalInstanceNum; i++) 
    {
        currRef = string(i)//sets currRef to the current loop iteration in string format
        locationName = "Location"+currRef//writes "Location#loopREF#" to a variable
        ini_open("test.ini"); //opens the ini file
        if(ini_section_exists(locationName)==true) //checks the ini file for the location name (Location#REF#) using the current loop iteration, if it exits it will continue
        {
            tempMyth = ini_read_real(locationName,"Mythical",2)
            if(tempMyth == global.myth)
            {
                LocationX = ini_read_real(locationName,"X",0)//reads the x location in the ini file, and sets that to a variable
                LocationY = ini_read_real(locationName,"Y",0)//reads the y location in the ini file, and sets that to a variable
                inst = instance_create(LocationX,LocationY,BuildingObject);  //creats an instance at the location using the object
            }
            ini_close(); //closes the ini file
        }
        else //if the location doesn't exist (IE max locations stored have been written), move set the totalInstanceNumber to the current loop number.
        {
            global.TotalInstanceNum = i;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
