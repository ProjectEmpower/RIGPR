<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.tempInputBoxX = global.InputBoxX+149;
global.tempInputBoxY = global.InputBoxY;
global.tempTextBoxY = global.InputTextY;
global.textBoxInstanceRef = instance_count;//This is the number of objects before instances are created.
global.week = 0;//week
global.focus = 0; //box focus
global.tempInputBoxY += 10; 
global.tempTextBoxY += 18;
if(room == RoomLocationAdd)
{
    textFeilds = 4;//number of text boxes we want.
    ini_open(global.locationINI)
    global.realLocationName = ini_read_string(global.tempLocation,"Real Location Name",""); //writes the instance number (global TotalInstanceNum) to "instanceRef" inside the ini file.;
    global.description = ini_read_string(global.tempLocation,"Description","");
    global.locationMyth = ini_read_real(global.tempLocation, "Mythical", "");
    global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0);
    ini_close();

    var inst;

    for(i = 0; i &lt; textFeilds; i++)
    {
        if(i == 1)//if i = description box then it will set the position based on the increased size
        { 
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 100;
            global.tempTextBoxY += 100;
        }
        else
        {
            //creates the instanes of the text boxes on screen.
            inst = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
    
        }
            global.tempInputBoxY += 25; 
            global.tempTextBoxY += 25;
    }
    if(global.locationEventNumber &gt; 0)
    {
        global.tempInputBoxY += 75; 
        global.tempTextBoxY += 75;   
       
        tempEventID = string(global.EventID);
        global.tempEvent = "Event"+tempEventID;
        tempEventType = global.tempEvent+"Type";
        tempEventWeek = global.tempEvent+"Week";
        tempEventmyth = global.tempEvent+"Mythical";
        ini_open(global.locationINI);
        global.eventType = ini_read_real(global.tempLocation, tempEventType, 0);
        global.eventWeek = ini_read_real(global.tempLocation, tempEventWeek, 0);
        global.eventMyth = ini_read_real(global.tempLocation, tempEventmyth, 0);
        ini_close();
        for(i = 0; i &lt; 3; i++)
        {
            inst = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 25; 
            global.tempTextBoxY += 25;   
        }
    }
}
if(room == RoomEventAdd or room == RoomEventEdit)
{
    TeventRef = string(global.eventRef);
    global.eventName = "Event"+TeventRef;
    textFeilds = 8;//number of text boxes we want.
    ini_open(global.eventINI)
    global.realEventName = ini_read_string(global.eventName,"Event Name",""); //writes the instance number (global TotalInstanceNum) to "instanceRef" inside the ini file.;
    global.reqEventInt = ini_read_real(global.eventName,"Int",0);
    global.reqEventChar = ini_read_real(global.eventName, "Char", 0);
    global.reqEventWell = ini_read_real(global.eventName, "Well",0);
    global.eventMythical = ini_read_real(global.eventName,"Mythical",0);
    global.card1 = ini_read_real(global.eventName,"Card1",0);
    global.card2 = ini_read_real(global.eventName,"Card2",0);
    global.card3 = ini_read_real(global.eventName,"Card3",0);
    
    ini_close();
    var inst;
    for(i = 0; i &lt; textFeilds; i++)
    {
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
    }
}
if(room == RoomEventList or room == RoomEventSelect)
{
    if(global.TotalEventNum  &gt;= 21)
    {
        global.listLength = 21;   
    }
    else
    {
        global.listLength = 21 - (21 - global.TotalEventNum);
    }
    for(i = 1; i &lt; global.listLength; i++)
    {
        tempEventRef = string(i);       
        tempEvent = "Event"+tempEventRef;
        ini_open(global.eventINI);
        global.eventRef = ini_read_real(tempEvent,"Ref","");
        global.realEventName = ini_read_string(tempEvent,"Event Name","");
        global.reqEventInt = ini_read_real(tempEvent,"Int",0);
        global.reqEventChar = ini_read_real(tempEvent, "Char", 0);       
        global.reqEventWell = ini_read_real(tempEvent, "Well",0);
        global.eventMythical = ini_read_real(tempEvent,"Mythical",0);
        ini_close();
        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
        global.tempInputBoxY += 25;
        global.tempTextBoxY += 25;
    }
}
if(room == RoomCardAdd or room == RoomCardEdit)
{
    TcardRef = string(global.cardRef);
    global.cardName = "Card"+TcardRef;
    textFeilds = 5;//number of text boxes we want.
    ini_open(global.cardINI)
    global.realCardName = ini_read_string(global.cardName,"Card Name","");
    global.int = ini_read_real(global.cardName,"Int",0);
    global.char = ini_read_real(global.cardName,"Char",0);
    global.well = ini_read_real(global.cardName,"Well",0);
    global.cardText = ini_read_string(global.cardName,"Card Text","");
    ini_close();
    var inst;
    for(i = 0; i &lt; textFeilds; i++)
    {
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
    }
}
if(room == RoomCardList or room == RoomCardSelect)
{
    if(global.TotalCardNum  &gt;= 21)
    {
        global.listLength = 21;   
    }
    else
    {
        global.listLength = 21 - (21 - global.TotalCardNum);
    }
    for(i = 1; i &lt; global.listLength; i++)
    {
        tempCardRef = string(i);       
        tempCard = "Card"+tempCardRef;
        ini_open(global.cardINI);
        global.cardRef = ini_read_real(tempCard,"Ref",0);
        global.realCardName = ini_read_string(tempCard,"Card Name","");
        global.int = ini_read_real(tempCard,"Int",0);
        global.char = ini_read_real(tempCard,"Char",0);
        global.well = ini_read_real(tempCard,"Well",0);
        global.cardText = ini_read_string(tempCard,"Card Text","");
        ini_close();
        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
        global.tempInputBoxY += 25;
        global.tempTextBoxY += 25;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.focus = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
