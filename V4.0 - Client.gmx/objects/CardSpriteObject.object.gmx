<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>DefaultCardSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
RoomState = global.RoomState;
if(RoomState == 0)
{
    ref_display = global.eventRef;
    RealName = global.realEventName;
    reqInt = global.reqEventInt;
    reqChar = global.reqEventChar;
    reqWell = global.reqEventWell;
}
if(RoomState == 1)
{
    ref_display = global.cardRef;
    RealName = global.realCardName;
    CardText = global.cardText;
}
if(RoomState == 2)
{
    ref_display = global.consCardRef;
    RealName = global.realConsName;
    INT = global.consInt;
    Cha = global.consChar;
    Wel = global.consWell;
}
if(RoomState == 3)
{
    ref_display = global.infoCardRef;
    RealName = global.realInfoName;
    CardText = global.infoCardText;
    Link = global.infoLink;
}
if(RoomState == 4)
{
    ref_display = global.charCardRef;
    RealName = global.charCardName;
    CardText = global.charCardText;
}

if(global.cardSprite == -1)
{
    sprite_index = DefaultCardSprite;
}
else
{
    if(global.cardSprite != -1)
    {
        if(RoomState == 0)
        {
            sprite_index = global.eventCardSpriteArray[global.cardSprite];
        }
        if(RoomState == 1)
        {
            sprite_index = global.actionCardSpriteArray[global.cardSprite];
        }
            if(RoomState == 2)
        {
            sprite_index = global.consCardSpriteArray[global.cardSprite];
        }
            if(RoomState == 4)
        {
            sprite_index = global.charCardSpriteArray[global.cardSprite];
        }
    }
}
if(global.RoomState == 3)
    sprite_index = No_sprite;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room != RoomInfoView)
    global.tempPos = 0;
if(room == RoomLocationView)
{   
    if(global.playerInt &gt;= reqInt and global.playerChar &gt;= reqChar and global.playerWell &gt;= reqWell)
    {
        if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink))
        {
            global.EventStore = "Event"+string(id.ref_display);
            global.eventRef = id.ref_display;
            global.tempPos = 0;
            room = RoomEventSelect;
        }
    }
}
if(room == RoomEventSelect)
{
    if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink) and global.TutorialSetup == false)
    {
            global.ActionStore = "Action"+string(id.ref_display);   
            global.cardRef = id.ref_display;
            global.consCardRef = id.ref_display;
            global.tempPos = 0;
            room = RoomConsView;

    }
    if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink) and global.TutorialSetup == true and global.CharacterTutorial == false and global.InformationTutorial == false)
    {
            global.ActionStore = "Action"+string(id.ref_display);   
            global.cardRef = id.ref_display;
            global.consCardRef = id.ref_display;
            global.tempPos = 0;
            room = RoomConsView;

    }
    if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink) and global.TutorialSetup == true and global.MythicalTutorial == true and global.InformationTutorial == false)
    {
            global.ActionStore = "Action"+string(id.ref_display);   
            global.cardRef = id.ref_display;
            global.consCardRef = id.ref_display;
            global.tempPos = 0;
            global.MythicalTutorial = false
            room = RoomCharacter;

    }
}
if(room == RoomCharView)
{    
    if(global.TimeTravel != true and global.TutorialSetup == false)
    {
        if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink))
        {
            global.CharStore = "Char"+string(id.ref_display);   
            global.CharSelected = 1;
            global.LoadTempInt = global.playerInt;
            global.LoadTempChar = global.playerChar;
            global.LoadTempWell = global.playerWell;
            global.LoadInt = global.playerInt
            global.LoadChar = global.playerChar
            global.LoadWell = global.playerWell
            global.JWeek = global.playerWeek;
            global.JYear = global.playerYear;
            script_execute(SaveHistory);
            if(global.playerWeek &lt; 52)
                global.playerWeek += 1;
            else if(global.playerYear &lt; 3)
            {
                global.playerYear += 1;
                global.playerWeek = 1;
            }
            else
                room = RoomEndScreen;
            script_execute(PlayerSave); 
            room = RoomMap;
        }
    }
    else if(global.TimeTravel != true and global.TutorialSetup == true)
    {            
        global.CharacterTutorial = false;
        if(global.MythTutorial  == 1)
        {
             global.MythicalTutorial = true;
            room = RoomEventSelect;       
        }
        else         
            room = RoomCharacter;

    }
    else if(global.TimeTravel == true and global.TutorialSetup == false)
    {
        if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink))
        {       
            global.CharStore = "Char"+string(id.ref_display);       
            global.CharSelected = 1;
            //sets old stats
            global.LoadTempInt = global.playerInt;
            global.LoadTempChar = global.playerChar;
            global.LoadTempWell = global.playerWell;
            //sets the current stat in hostory
            global.LoadInt = global.playerInt
            global.LoadChar = global.playerChar
            global.LoadWell = global.playerWell
            script_execute(SaveHistory);
            //sets the player stats back to what they should be 
            global.playerInt = global.playerTempInt;
            global.playerChar = global.playerTempChar;
            global.playerWell = global.playerTempWell;
            //removes the stat changes from previous 
            global.playerInt += global.DiffInt;
            global.playerChar += global.DiffChar;
            global.playerWell += global.DiffWell;
    
            global.TimeTravel = false;
            global.playerWeek = global.playerTempWeek;
            global.playerYear = global.playerTempYear;
            script_execute(PlayerSave); 
            room = RoomDiary;
        }
    }
}
if(room == RoomConsView)
{    
    if(global.TimeTravel != true and global.TutorialSetup == false)
    {
        if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink))
        {
            global.LoadTempInt = global.playerInt;
            global.CharSelected = 0
            global.LoadTempChar = global.playerChar;
            global.LoadTempWell = global.playerWell;
            global.playerInt += global.consInt;
            global.playerChar += global.consChar;
            global.playerWell += global.consWell;
            global.LoadInt = global.playerInt
            global.LoadChar = global.playerChar
            global.LoadWell = global.playerWell
            global.JWeek = global.playerWeek;
            global.JYear = global.playerYear;
            script_execute(SaveHistory);
            if(global.playerWeek &lt; 52)
                global.playerWeek += 1;
            else if(global.playerYear &lt; 3)
            {
                global.playerYear += 1;
                global.playerWeek = 1;
            }
            else
                room = RoomEndScreen;
            script_execute(PlayerSave); 
    
            room = RoomMap;
        }
    }
    else if(global.TimeTravel != true and global.TutorialSetup == true and global.InformationTutorial == false)
    {
        global.InformationTutorial = true;
        global.LoadTempInt = global.playerInt;
        global.CharSelected = 0
        global.LoadTempChar = global.playerChar;
        global.LoadTempWell = global.playerWell;
        global.playerInt += global.consInt;
        global.playerChar += global.consChar;
        global.playerWell += global.consWell;
        global.LoadInt = global.playerInt
        global.LoadChar = global.playerChar
        global.LoadWell = global.playerWell
        global.JWeek = global.playerWeek;
        global.JYear = global.playerYear;
        script_execute(SaveHistory);
        room = RoomEventSelect;
    }
    else if(global.TimeTravel == true and global.TutorialSetup == false)
    {
        if (!position_meeting(mouse_x, mouse_y, ButtonInfoLink))
        {
            global.CharSelected = 0
            //sets old stats
            global.LoadTempInt = global.playerInt;
            global.LoadTempChar = global.playerChar;
            global.LoadTempWell = global.playerWell;
            //updates current states
            global.playerInt += global.consInt;
            global.playerChar += global.consChar;
            global.playerWell += global.consWell;
            //sets the current stat in hostory
            global.LoadInt = global.playerInt
            global.LoadChar = global.playerChar
            global.LoadWell = global.playerWell
            script_execute(SaveHistory);
            //sets the player stats back to what they should be 
            global.playerInt = global.playerTempInt;
            global.playerChar = global.playerTempChar;
            global.playerWell = global.playerTempWell;
            //removes the stat changes from previous 
            global.playerInt += global.DiffInt;
            global.playerChar += global.DiffChar;
            global.playerWell += global.DiffWell;
            //adds the new stats back to stats
            global.playerInt += global.consInt;
            global.playerChar += global.consChar;
            global.playerWell += global.consWell;
    
            global.TimeTravel = false;
            global.playerWeek = global.playerTempWeek;
            global.playerYear = global.playerTempYear;
            script_execute(PlayerSave); 
            room = RoomDiary;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomLocationView or room == RoomCharView or room ==RoomEventSelect or room ==RoomInfoView or room == RoomConsView or room == RoomCards or room == RoomDiary)
{
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    cardNameText = "";
    if(RoomState == 0)
    {
        cardNameText = "Event";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 152, "Required Int: " + string(reqInt),1,1,0);
        draw_text_transformed(x, y + 184, "Required Cha: " + string(reqChar),1,1,0);
        draw_text_transformed(x, y + 216, "Required Wel: " + string(reqWell),1,1,0); 
    }
    if(RoomState == 1)
    {
        cardNameText = "Action";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_set_valign(fa_top);
        draw_text_ext(x, y + 125, CardText,20,200);
    }
    if(RoomState == 2)
    {
        cardNameText = "Consequence";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 152, "Int: " + string(INT),1,1,0);
        draw_text_transformed(x, y + 184, "Char: " + string(Cha),1,1,0);
        draw_text_transformed(x, y + 216, "Well: " + string(Wel),1,1,0);
    }
    if(RoomState == 3)
    {
        cardNameText = "Information";
        draw_text_transformed(x, y - 70, RealName,1,1,0);
        draw_set_valign(fa_top);
        draw_text_ext(x, y - 48, CardText,20,200);
        draw_set_valign(fa_middle);
    }
    if(RoomState == 4)
    {
        cardNameText = "Character";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
            draw_set_valign(fa_top);
            draw_text_ext(x, y + 125, CardText,20,200);
        
    }
    draw_text_transformed(x, y - 112, cardNameText,1.5,1.5,0);
}
else
{
cardNameText = "";
   if(RoomState == 0)
    {
        cardNameText = "Event";
    }
    if(RoomState == 1)
    {
        cardNameText = "Action";
    }
    if(RoomState == 2)
    {
        cardNameText = "Consequence";
    }
    if(RoomState == 3)
    {
        cardNameText = "Information";
    }
    if(RoomState == 4)
    {
        cardNameText = "Character";
    }
draw_text_transformed(x, y - 112, cardNameText,1.5,1.5,0);
}
 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
