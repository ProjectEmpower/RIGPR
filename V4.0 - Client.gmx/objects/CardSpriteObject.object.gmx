<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>DefaultCardSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 1;
RoomState = global.RoomState;
if(RoomState == 0)
{
    ref_display = global.eventRef;
    RealName = global.realEventName;
    reqINT = global.reqEventInt;
    reqCha = global.reqEventChar;
    reqWel = global.reqEventWell;
}
if(RoomState == 1)
{
    ref_display = global.cardRef;
    RealName = global.realCardName;
    CardText = global.cardText;
}
if(RoomState == 2)
{
    ref_display = global.consCardRef;
    RealName = global.realConsName;
    INT = global.consInt;
    Cha = global.consChar;
    Wel = global.consWell;
}
if(RoomState == 3)
{
    ref_display = global.infoCardRef;
    RealName = global.realInfoName;
    CardText = global.infoCardText;
    Link = global.infoLink;
}
if(RoomState == 4)
{
    ref_display = global.charCardRef;
    RealName = global.charCardName;
    CardText = global.charCardText;
}

if(global.cardSprite == -1)
{
    sprite_index = DefaultCardSprite;
}
else
{
    if(global.cardSprite != -1)
    {
        if(RoomState == 0)
        {
            sprite_index = global.eventCardSpriteArray[global.cardSprite];
        }
        if(RoomState == 1)
        {
            sprite_index = global.actionCardSpriteArray[global.cardSprite];
        }
            if(RoomState == 2)
        {
            sprite_index = global.consCardSpriteArray[global.cardSprite];
        }
            if(RoomState == 3)
        {
            sprite_index = global.infoCardSpriteArray[global.cardSprite];
        }
            if(RoomState == 4)
        {
            sprite_index = global.charCardSpriteArray[global.cardSprite];
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomLocationView)
{
    global.eventRef = id.ref_display;
    global.tempPos = 0;
    room = RoomEventSelect;
}
if(room == RoomEventSelect)
{
    global.cardRef = id.ref_display;
        global.tempPos = 0;
    room = RoomActionView;
}
if(room == RoomActionView)
{
    global.consCardRef = id.ref_display;
    room = RoomConsView;
}
if(room == RoomConsView)
{
    tempInt = global.consInt;
    tempChar = global.consChar;
    tempWell = global.consWell;
    //save character here and advance week
    room = RoomMap;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomLocationView or room ==RoomEventSelect or room ==RoomActionView)
{
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    cardNameText = "";
    if(RoomState == 0)
    {
        cardNameText = "Event";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 152, "Required Int: " + string(reqINT),1,1,0);
        draw_text_transformed(x, y + 184, "Required Cha: " + string(reqCha),1,1,0);
        draw_text_transformed(x, y + 216, "Required Wel: " + string(reqWel),1,1,0);
    }
    if(RoomState == 1)
    {
        cardNameText = "Action";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 152, CardText,1,1,0);
    }
    if(RoomState == 2)
    {
        cardNameText = "Consequence";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 80, "Int: " + string(INT),1,1,0);
        draw_text_transformed(x, y + 112, "Char: " + string(Cha),1,1,0);
        draw_text_transformed(x, y + 144, "Well: " + string(Wel),1,1,0);
    }
    if(RoomState == 3)
    {
        cardNameText = "Information";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 80, CardText,1,1,0);
        draw_text_transformed(x, y + 112,Link,1,1,0);
    }
    if(RoomState == 4)
    {
        cardNameText = "Character";
        draw_text_transformed(x, y + 120, RealName,1,1,0);
        draw_text_transformed(x, y + 80, CardText,1,1,0);
        
    }
    draw_text_transformed(x, y - 112, cardNameText,1.5,1.5,0);
}
else
{
cardNameText = "";
   if(RoomState == 0)
    {
        cardNameText = "Event";
    }
    if(RoomState == 1)
    {
        cardNameText = "Action";
    }
    if(RoomState == 2)
    {
        cardNameText = "Consequence";
    }
    if(RoomState == 3)
    {
        cardNameText = "Information";
    }
    if(RoomState == 4)
    {
        cardNameText = "Character";
    }
draw_text_transformed(x, y - 112, cardNameText,1.5,1.5,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
