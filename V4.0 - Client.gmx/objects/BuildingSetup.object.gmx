<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inst;
//This code counts the number of locations stored, asigns them instances and displays them based on their mythical status.
global.TotalInstanceNum = 100;//sets global Num to 100 (100 is max istance ammount)
for(i = 0; i &lt; global.TotalInstanceNum; i++) 
{
    global.objectRef = i;//not sure if needed anymore
    currRef = string(i);//sets currRef to the current loop iteration in string format
    locationName = "Location"+currRef;//writes "Location#loopREF#" to a variable
    ini_open(global.locationINI); //opens the ini file
    
    if(ini_section_exists(locationName)==true) //checks the ini file for the location name (Location#REF#) using the current loop iteration, if it exits it will continue
    {
        tempEventNum = ini_read_real(locationName, "Number of Events", 0);
        ini_close();
        if(tempEventNum &gt; 0)//if there are events
        {   
            for(e = 1; e &lt;= tempEventNum; e++)
            {
                //sets up the type/week variable names for use when reading the locations ini
                tempEventID = string(e);
                tempEventType = "Event"+tempEventID+"Type";
                tempEventWeek = "Event"+tempEventID+"Week";
                ini_open(global.locationINI)//opens location ini
                //sets up the events variable name for reading the events ini
                tempEventRef = ini_read_real(locationName, tempEventType, 0);
                tempEventWeekMap = ini_read_real(locationName, tempEventWeek, 0);
                locationMyth = ini_read_real(locationName,"Mythical",3);
                ini_close();//closes location ini
                s = string(tempEventRef)
                tempEventName = "Event"+s;
                ini_open(global.cardEventINI);//opens event ini
                tempMyth = ini_read_real(tempEventName, "Mythical", 3);  
                ini_close();//closes event ini
                ini_open(global.locationINI);//opens location ini
                if(global.week == tempEventWeekMap and locationMyth != 3) //if tempMyth is current mythical status (global.myth) or 2 (both) and the week matches the events week
                {
                    ini_write_real(locationName,"Mythical",tempMyth); //reads the sprite
                    LocationX = ini_read_real(locationName,"X",0)//reads the x location in the ini file, and sets that to a variable
                    LocationY = ini_read_real(locationName,"Y",0)//reads the y location in the ini file, and sets that to a variable
                    global.buildingArray[i] = instance_create(LocationX,LocationY,Building);  //creats an instance at the location using the object
                }
                ini_close()//closes location ini
            }

        }
    }
    else //if the location doesn't exist (IE max locations stored have been written), set the totalInstanceNumber to the current loop number.
    {
        global.TotalInstanceNum = i;
    }
}
//this code counts the number of current events in the system.
global.totalEventCards = 100;
for(i = 0; i &lt;= global.totalEventCards; i++)
{
    currentCardRef = string(i+1);//writes i as a string to a variable
    currentCard = "Event"+currentCardRef; //writes the current event + position in for loop
    ini_open(global.cardEventINI);  //opens the event ini file
    if(!ini_section_exists(currentCard))//if the current event in list does not exist
    {
        global.totalEventCards = i; 
        //set the total to the current loop number.
    }
    else
    {
        global.eventArray[i] = currentCard;
    }
    ini_close();
}
//sets up the action cards
global.totalActionCards = 100;
for(i = 0; i &lt;= global.totalActionCards; i ++)
{
    currentCardRef = string(i+1);//writes i as a string to a variable
    currentCard = "Action"+currentCardRef; //writes the current event + position in for loop
    ini_open(global.cardActionINI);  //opens the event ini file
    if(!ini_section_exists(currentCard))//if the current event in list does not exist
    {
        global.totalActionCards = i;//set the total to the current loop number.
    }
    else
    {
        global.actionArray[i] = currentCard;
    }
    ini_close();
}
//sets up the consequence cards
global.totalConsCards = 100;
for(i = 0; i &lt;= global.totalConsCards; i ++)
{
    currentCardRef = string(i+1);//writes i as a string to a variable
    currentCard = "Cons"+currentCardRef; //writes the current event + position in for loop
    ini_open(global.cardConsINI);  //opens the event ini file
    if(!ini_section_exists(currentCard))//if the current event in list does not exist
    {
        global.totalConsCards = i;//set the total to the current loop number.
    }
    else
    {
    global.consArray[i] = currentCard;
    }
    ini_close();
}
//sets up the information cards
global.totalInfoCards = 100;
for(i = 0; i &lt;= global.totalInfoCards; i ++)
{
    currentCardRef = string(i+1);//writes i as a string to a variable
    currentCard = "Info"+currentCardRef; //writes the current event + position in for loop
    ini_open(global.cardInfoINI);  //opens the event ini file
    if(!ini_section_exists(currentCard))//if the current event in list does not exist
    {
        global.totalInfoCards = i;//set the total to the current loop number.
    }
    else
    {
    global.infoArray[i] = currentCard;
    }
    ini_close();
}
//sets up the character cards
global.totalCharCards = 100;
for(i = 0; i &lt;= global.totalCharCards; i ++)
{
    currentCardRef = string(i+1);//writes i as a string to a variable
    currentCard = "Char"+currentCardRef; //writes the current event + position in for loop
    ini_open(global.cardCharINI);  //opens the event ini file
    if(!ini_section_exists(currentCard))//if the current event in list does not exist
    {
        global.totalCharCards = i;//set the total to the current loop number.
    }
    else
    {
    global.charArray[i] = currentCard;
    }
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
