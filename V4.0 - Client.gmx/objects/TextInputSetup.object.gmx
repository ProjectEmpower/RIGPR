<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.InputBoxX = room_width/5
global.InputBoxY = room_height/6
global.InputTextX = room_width/5
global.InputTextY = room_height/6
//This code is used for actually creating the text box instances to didplay on screen
global.tempInputBoxX = global.InputBoxX+149; //sets temp input box X
global.tempInputBoxY = global.InputBoxY;//sets temp input box Y
global.tempTextBoxY = global.InputTextY;//sets temp text box Y
global.textBoxInstanceRef = instance_count;//This is the number of objects before instances are created.
global.focus = 0; //box focus
if(os_type == os_android)
{
    global.startOrientation = display_get_orientation();
    //landscape
    if(global.startOrientation != display_portrait or global.startOrientation != display_portrait_flipped)
    {
       if(room == RoomLocationView)
    {
            if(global.Cont == 1)
            {
                eventType = 0;
                //global.tempLocation
                ini_open(global.locationINI); 
                global.LocationStore = ini_read_string(global.tempLocation,"Real Location Name","");
                global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
                ini_close();
                global.eventNum = 0;
                for(i = 0; i &lt;=  + global.locationEventNumber; i++)
                { 
                    ini_open(global.locationINI);  
                    tempEventWeek = "Event"+string(i+1)+"Week";
                    tempWeek = ini_read_real(global.tempLocation, tempEventWeek,0); //reads the number of events from ini
                    if(tempWeek == global.playerWeek)
                    {
        
                        global.event[global.locationEventNumber] = 0;
                        tempEventType = "Event"+string(i+1)+"Type";
                        global.event[global.eventNum] = ini_read_real(global.tempLocation, tempEventType,0); //reads the number of events from ini
                        ini_close();   
                        if(global.event[global.eventNum] != 0)
                        { 
                            global.eventNum += 1;
                        }
                    }
                    ini_close();
                }
                for(i = 0; i &lt; global.eventNum; i++)
                {
                    global.EventLoadName = "Event"+string(global.event[i]);
                    global.RoomState = 0;
                    script_execute(LoadCards);
                    if(global.eventNum == 1)
                    {
                        tempX = (global.roomWidth / 2);
                    }
                    if(global.eventNum == 2)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 150;
                        if(i == 1)
                            tempX = (global.roomWidth / 2) + 150;
                    }
                    if(global.eventNum == 3)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 275;
                        if(i == 1)
                            tempX = (global.roomWidth / 2);
                        if(i == 2)
                            tempX = (global.roomWidth / 2) + 275;
                    }
                    tempY = global.roomHeight/2;
                    inst = instance_create(tempX,tempY,CardBacking); 
                }
            }
        }
        if(room == RoomEventSelect)
        {
            global.cardNum = 0;
            eventType = 0;
            //global.tempLocation
                ini_open(global.cardEventINI);  
                eventName = "Event"+string(global.eventRef);
                global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                ini_close();
                for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                {
                    ini_open(global.cardEventINI);  
                    tempAction = "Action"+string(i+1);
                    global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                    ini_close();
                    if(global.card[global.cardNum] != 0)
                    {
                        global.cardNum +=1;

                    }
                }
                for(i = 0; i &lt; global.cardNum; i++)
               {
                   global.RoomState = 1;
                    global.ActionLoadName = "Action"+string(global.card[i]);
                    script_execute(LoadCards);
                   if(global.cardNum == 1)
                    {
                        tempX = (global.roomWidth / 2);
                    }
                    if(global.cardNum == 2)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 150;
                        if(i == 1)
                            tempX = (global.roomWidth / 2) + 150;
                    }
                    if(global.cardNum == 3)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 275;
                        if(i == 1)
                            tempX = (global.roomWidth / 2);
                        if(i == 2)
                            tempX = (global.roomWidth / 2) + 275;
                    }
                    tempY = global.roomHeight/2;

                    inst = instance_create(tempX,tempY,CardBacking); 
               }
        
        }
if(room == RoomInfoView)
        {
        
            switch(global.InfoViewRoomState)
            {
                case 0: 
                global.EventLoadName = "Event"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 0;
                break;
                case 1: 
                global.ActionLoadName = "Action"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 1;
                break;
                case 2: 
                global.ConsLoadName = "Cons"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 2;
                break;
                case 4: 
                //global.ActionLoadName = "Char"+string(global.InfoViewRef);
                //script_execute(LoadCards);
                global.RoomState = 4;
                break;
            }

                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;

                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        
        
        }
        if(room == RoomConsView)
        {
        
                  global.RoomState = 2;  
                global.ConsLoadName = "Cons"+string(global.consCardRef);
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;
                    inst = instance_create(tempX * (2),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        }
        if(room == RoomNewGame)
        {
                textFeilds = 1;//number of text boxes we want.
            for(i = 0; i &lt; textFeilds; i++)
          {      
            
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
               global.tempInputBoxY += 25;
               global.tempTextBoxY += 25;
           }
        }
    }
        //Portrate
    else//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       {
        if(room == RoomLocationView)
        {
    
            eventType = 0;
            //global.tempLocation
            ini_open(global.locationINI);  
             global.LocationStore = ini_read_string(global.tempLocation,"Real Location Name","");
            global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
            ini_close();
            global.eventNum = 0;
            for(i = 0; i &lt;=  + global.locationEventNumber; i++)
            { 
            show_debug_message(global.eventNum);
                ini_open(global.locationINI);  
                tempEventWeek = "Event"+string(i+1)+"Week";
                tempWeek = ini_read_real(global.tempLocation, tempEventWeek,0); //reads the number of events from ini
                if(tempWeek == global.playerWeek)
                {
    
                    global.event[global.locationEventNumber] = 0;
                    tempEventType = "Event"+string(i+1)+"Type";
                    global.event[global.eventNum] = ini_read_real(global.tempLocation, tempEventType,0); //reads the number of events from ini
                    ini_close();   
                    if(global.event[global.eventNum] != 0)
                    { 
                        global.eventNum += 1;

                    }
    
                }
                ini_close();
            }
             for(i = 0; i &lt; global.eventNum; i++)
            {
                global.EventLoadName = "Event"+string(global.event[i]);
                global.RoomState = 0;
                script_execute(LoadCards);
            }
            global.EventLoadName = "Event"+string(global.event[global.tempPos]);
            global.RoomState = 0;
            script_execute(LoadCards);
            tempX = (global.roomWidth / 2)
            tempY = (global.roomHeight / 2)
            inst = instance_create(tempX,tempY,CardBacking); 
        }
        if(room == RoomEventSelect)
        {
            global.cardNum = 0;
            eventType = 0;
            //global.tempLocation
                ini_open(global.cardEventINI);  
                eventName = "Event"+string(global.eventRef);
                global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                global.card1[global.eventActionCardsNum] = 0;
                ini_close();
                for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                {
                        show_debug_message("card: " + string(global.cardNum));
                    ini_open(global.cardEventINI);  
                    tempAction = "Action"+string(i+1);
                    global.card1[global.cardNum] = ini_read_real(eventName,tempAction,0);
                    ini_close();
                    if(global.card1[global.cardNum] != 0)
                    {
                        global.cardNum +=1;
                    }
                       global.RoomState = 1;
                global.ActionLoadName = "Action"+string(global.card[i]);
                script_execute(LoadCards);
                }

                tempX = (global.roomWidth / 2);
                tempY = global.roomHeight/2;
                inst = instance_create(tempX,tempY,CardBacking); 
        
        }
if(room == RoomInfoView)
        {
        
            switch(global.InfoViewRoomState)
            {
                case 0: 
                global.EventLoadName = "Event"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 0;
                break;
                case 1: 
                global.ActionLoadName = "Action"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 1;
                break;
                case 2: 
                global.ConsLoadName = "Cons"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 2;
                break;
                case 4: 
                //global.ActionLoadName = "Char"+string(global.InfoViewRef);
                //script_execute(LoadCards);
                global.RoomState = 4;
                break;
            }

                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;

                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        
        
        }
        if(room == RoomConsView)
        {
        
        
            //global.tempLocation
                global.RoomState = 2;  
                global.ConsLoadName = "Cons"+string(global.consCardRef);
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;
                    inst = instance_create(tempX * (2),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        }
        if(room == RoomNewGame)
        {
                textFeilds = 1;//number of text boxes we want.
            for(i = 0; i &lt; textFeilds; i++)
          {      
            
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
               global.tempInputBoxY += 25;
               global.tempTextBoxY += 25;
           }
        }
    }
}
//PC
else//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
{
   if(room == RoomLocationView)
        {
            if(global.Cont == 1)
            {
                eventType = 0;
                //global.tempLocation
                ini_open(global.locationINI);  
                 global.LocationStore = ini_read_string(global.tempLocation,"Real Location Name","");
                global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
                ini_close();
                global.eventNum = 0;
                for(i = 0; i &lt;=  + global.locationEventNumber; i++)
                { 
                    ini_open(global.locationINI);  
                    tempEventWeek = "Event"+string(i+1)+"Week";
                    tempWeek = ini_read_real(global.tempLocation, tempEventWeek,0); //reads the number of events from ini
                    if(tempWeek == global.playerWeek)
                    {
        
                        global.event[global.locationEventNumber] = 0;
                        tempEventType = "Event"+string(i+1)+"Type";
                        global.event[global.eventNum] = ini_read_real(global.tempLocation, tempEventType,0); //reads the number of events from ini
                        ini_close();   
                        if(global.event[global.eventNum] != 0)
                        { 
                            global.eventNum += 1;
                        }
                    }
                    ini_close();
                }
                for(i = 0; i &lt; global.eventNum; i++)
                {
                    global.EventLoadName = "Event"+string(global.event[i]);
                    global.RoomState = 0;
                    script_execute(LoadCards);
                    if(global.eventNum == 1)
                    {
                        tempX = (global.roomWidth / 2);
                    }
                    if(global.eventNum == 2)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 150;
                        if(i == 1)
                            tempX = (global.roomWidth / 2) + 150;
                    }
                    if(global.eventNum == 3)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 275;
                        if(i == 1)
                            tempX = (global.roomWidth / 2);
                        if(i == 2)
                            tempX = (global.roomWidth / 2) + 275;
                    }
                    tempY = global.roomHeight/2;
                    inst = instance_create(tempX,tempY,CardBacking); 
                }
            }
        }
        if(room == RoomEventSelect)
        {
            global.cardNum = 0;
            eventType = 0;
            //global.tempLocation
                ini_open(global.cardEventINI);  
                eventName = "Event"+string(global.eventRef);
                global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                ini_close();
                for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                {
                    ini_open(global.cardEventINI);  
                    tempAction = "Action"+string(i+1);
                    global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                    ini_close();
                    if(global.card[global.cardNum] != 0)
                    {
                        global.cardNum +=1;

                    }
                }
                for(i = 0; i &lt; global.cardNum; i++)
               {
                   global.RoomState = 1;
                    global.ActionLoadName = "Action"+string(global.card[i]);
                    script_execute(LoadCards);
                   if(global.cardNum == 1)
                    {
                        tempX = (global.roomWidth / 2);
                    }
                    if(global.cardNum == 2)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 150;
                        if(i == 1)
                            tempX = (global.roomWidth / 2) + 150;
                    }
                    if(global.cardNum == 3)
                    {
                        if(i == 0)
                            tempX = (global.roomWidth / 2) - 275;
                        if(i == 1)
                            tempX = (global.roomWidth / 2);
                        if(i == 2)
                            tempX = (global.roomWidth / 2) + 275;
                    }
                    tempY = global.roomHeight/2;

                    inst = instance_create(tempX,tempY,CardBacking); 
               }
        
        }
        if(room == RoomInfoView)
        {
        
            switch(global.InfoViewRoomState)
            {
                case 0: 
                global.EventLoadName = "Event"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 0;
                break;
                case 1: 
                global.ActionLoadName = "Action"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 1;
                break;
                case 2: 
                global.ConsLoadName = "Cons"+string(global.InfoViewRef);
                script_execute(LoadCards);
                global.RoomState = 2;
                break;
                case 4: 
                //global.ActionLoadName = "Char"+string(global.InfoViewRef);
                //script_execute(LoadCards);
                global.RoomState = 4;
                break;
            }

                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;

                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        
        
        }
        if(room == RoomConsView)
        {
        
                  global.RoomState = 2;  
                global.ConsLoadName = "Cons"+string(global.consCardRef);
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;
                    inst = instance_create(tempX * (2),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        }
        if(room == RoomNewGame)
        {
                textFeilds = 1;//number of text boxes we want.
            for(i = 0; i &lt; textFeilds; i++)
          {      
            
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
               global.tempInputBoxY += 25;
               global.tempTextBoxY += 25;
           }
        }
        if(room == RoomCards)
{                 
    e = 0;
    Year = 1;
    Week = 1;
    cardNum = 0;
    if(global.RoomState == 0)//event card
    {    
        list = ds_list_create();
        listtemo = ds_list_create()
        ini_open(global.AllCards)
        eventCardOrder = ini_read_string("All Cards","Event Order","");
        ds_list_read(list,eventCardOrder)
        ini_close();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalEventCards  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - global.totalEventCards);
            }
            //used to display the lists of events, works the same as previously
            for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
            {
                ini_open(global.historyINI);
                EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                       
                ini_close();
                ini_open(global.cardEventINI)
                if(ini_section_exists("Event"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Event"+string(i),"Ref",""))) == -1)
                {           
                    if("Event"+string(ini_read_real("Event"+string(e),"Ref","")) == EventStore)
                    {
                        global.EventLoadName = EventStore;
                        ds_list_add(listtemo,string(ini_read_real("Event"+string(i),"Ref","")))
                        script_execute(LoadCards);
                        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                        global.tempInputBoxY += 25;
                        global.tempTextBoxY += 25;
                        e +=1;
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

                }

            }

        }
        if(global.ListStyle == 1)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalEventCards  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - global.totalEventCards);
            }

            //used to display the lists of events, works the same as previously
            for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
            {
                ini_open(global.historyINI);
                EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                       
                ini_close();
                ini_open(global.cardEventINI)
                if(ini_section_exists("Event"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Event"+string(i),"Ref",""))) == -1)
                {                            
                    
                    if("Event"+string(ini_read_real("Event"+string(i),"Ref","")) == EventStore)
                    {
                        global.EventLoadName = EventStore;
                        ds_list_add(listtemo,string(ini_read_real("Event"+string(i),"Ref",""))) 
                        script_execute(LoadCards);
                        tempY = global.roomHeight/2;
                        tempX = (global.roomWidth / 6)-25;
                        inst = instance_create(tempX + 300*(cardNum-global.tempPos),tempY,CardBacking);     
                        e +=1;
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

                    
                }
                ini_close();

            }
        }
    }
    if(global.RoomState == 1)//Action card
    {   
        list = ds_list_create();
        listtemo = ds_list_create();
        ini_open(global.AllCards)
        actionCardOrder = ini_read_string("All Cards","Action Order","");
        ds_list_read(list,actionCardOrder)
        ini_close();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalActionCards  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - global.totalActionCards);
             //used to display the lists of card, works the same as previously
                for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
                {                
                    ini_open(global.historyINI);
                    ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                    ini_close();
                    ini_open(global.cardActionINI);
                    if(ini_section_exists("Action"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Action"+string(i),"Ref",""))) == -1)
                    {                                         
                        if("Action"+string(ini_read_real("Action"+string(i),"Ref","")) == ActionStore)
                        {   
                            global.ActionLoadName = ActionStore;
                            ds_list_add(listtemo,string(ini_read_real("Action"+string(i),"Ref","")))
                            script_execute(LoadCards);
                            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                            global.tempInputBoxY += 25;
                            global.tempTextBoxY += 25;
                            e +=1;
                            i = 0;
                            cardNum += 1;
                            Week +=1;
                        }
      
                    }
                    ini_close();
                }
            }
        }
        
        if(global.ListStyle == 1)
        {
                    //this code is to make sure that the list length doesnt exceed 20
            if(global.totalActionCards  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - global.totalActionCards);
            }
             //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
            {                    
                ini_open(global.historyINI);
                ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                ini_close();
                ini_open(global.cardActionINI);
                if(ini_section_exists("Action"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Action"+string(i),"Ref",""))) == -1)
                {                                         
                    if("Action"+string(ini_read_real("Action"+string(i),"Ref","")) == ActionStore)
                    {                                        
                        global.ActionLoadName = ActionStore;
                        ds_list_add(listtemo,string(ini_read_real("Action"+string(i),"Ref","")))     
                        script_execute(LoadCards);
                        tempY = global.roomHeight/2;
                        tempX = (global.roomWidth / 6)-25;
                        inst = instance_create(tempX + 300*(cardNum-global.tempPos),tempY,CardBacking);     
                        e +=1;
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

                }
                ini_close()
            }
        }
    }
    if(global.RoomState == 2)//Consequence
    {    
        list = ds_list_create();
        listtemo = ds_list_create();
        ini_open(global.AllCards)
        consCardOrder = ini_read_string("All Cards","Cons Order","");
        ds_list_read(list,consCardOrder)
        ini_close();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalConsCards  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - global.totalConsCards);
            }

             //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
            {
                    ini_open(global.historyINI);
                    ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                    ini_close();
                    ini_open(global.cardActionINI);
                    show_debug_message(ActionStore);
                    ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", 0));
                    ini_close();
                    ini_open(global.cardConsINI);
                    show_debug_message(ActionStore);
                    if(ini_section_exists("Cons"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Cons"+string(i),"Ref",""))) == -1)
                    {
                        if("Cons"+string(ini_read_real("Cons"+string(i),"Ref","")) == ConsStore)
                        {      
                            global.ConsLoadName = ConsStore;
                            ds_list_add(listtemo,string(ini_read_real("Cons"+string(i),"Ref","")))
                            script_execute(LoadCards);
                            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                            global.tempInputBoxY += 25;
                            global.tempTextBoxY += 25;
                            e +=1;
                            i = 0;
                            cardNum += 1;
                            Week +=1;
                        }
                    }
                    ini_close();
            
            }
        }
        if(global.ListStyle == 1)
        {
        //this code is to make sure that the list length doesnt exceed 20
            if(global.totalConsCards  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - global.totalConsCards);
            }
             //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt;= global.listLength+global.tempPos; i++)
            {
                ini_open(global.historyINI);
                ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                ini_close();
                ini_open(global.cardActionINI);
                ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", 0));
                ini_close();
                ini_open(global.cardConsINI);

                if(ini_section_exists("Cons"+string(ds_list_find_value(list,e))) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Cons"+string(i),"Ref",""))) == -1)
                {
                    if("Cons"+string(ini_read_real("Cons"+string(i),"Ref","")) == ConsStore)
                    {                                 
                        global.ConsLoadName = ConsStore;
                        ds_list_add(listtemo,string(ini_read_real("Cons"+string(i),"Ref","")))
                        script_execute(LoadCards);
                        tempY = global.roomHeight/2;
                        tempX = (global.roomWidth / 6)-25;
                        inst = instance_create(tempX + 300*(cardNum-global.tempPos),tempY,CardBacking);     
                        e +=1;
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }
                }
             ini_close();
            }
        }
    }
    if(global.RoomState == 3)//Info
    {
        list = ds_list_create();
        listtemo = ds_list_create();
        ini_open(global.AllCards)
        infoCardOrder = ini_read_string("All Cards","Info Order","");
        ds_list_read(list,infoCardOrder)
        ini_close();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalInfoCards  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - global.totalInfoCards);
            }
                        e = 0;
             //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                   ini_open(global.cardInfoINI);
                    global.InfoLoadName = "Info"+string(ds_list_find_value(list,e));
                    if(ini_section_exists(global.InfoLoadName) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Info"+string(i),"Ref",""))) == -1)
                    {
                        ds_list_add(listtemo,string(ini_read_real("Info"+string(i),"Ref","")))
                        script_execute(LoadCards);
                        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                        global.tempInputBoxY += 25;
                        global.tempTextBoxY += 25;
                        e +=1;
                        i = 0;
                    }
                ini_close();
            
            }
        }
        if(global.ListStyle == 1)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalInfoCards  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - global.totalInfoCards);
            }
            e = 0;
             //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
             ini_open(global.cardInfoINI);
                global.InfoLoadName = "Info"+string(ds_list_find_value(list,e));
                if(ini_section_exists(global.InfoLoadName) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Info"+string(i),"Ref",""))) == -1)
                {
                    ds_list_add(listtemo,string(ini_read_real("Info"+string(i),"Ref","")))
                    script_execute(LoadCards);
                    tempY = global.roomHeight/2;
                    tempX = (global.roomWidth / 6)-25;
                    inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);     
                    e +=1;
                    i = 0;
                }
             ini_close();   
              }  
        }
    }
    if(global.RoomState == 4)//Character
    {
        list = ds_list_create();
        listtemo = ds_list_create();
        ini_open(global.AllCards)
        charCardOrder = ini_read_string("All Cards","Char Order","");
        ds_list_read(list,charCardOrder)
        ini_close();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            if(global.totalCharCards  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - global.totalCharCards);
            }
            e = 0;
            //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                   ini_open(global.cardCharINI);
                    global.CharLoadName = "Char"+string(ds_list_find_value(list,e));
                    if(ini_section_exists(global.CharLoadName) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Char"+string(i),"Ref",""))) == -1)
                    {
                        ds_list_add(listtemo,string(ini_read_real("Char"+string(i),"Ref","")))
                        script_execute(LoadCards);
                        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                        global.tempInputBoxY += 25;
                        global.tempTextBoxY += 25;
                        e +=1;
                        i = 0;
                    }
                ini_close();
            
            }
        }
        if(global.ListStyle == 1)
        {
        //this code is to make sure that the list length doesnt exceed 20
            if(global.totalCharCards  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - global.totalCharCards);
            }
            e = 0;
            //used to display the lists of card, works the same as previously
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
             ini_open(global.cardCharINI);
                global.CharLoadName = "Char"+string(ds_list_find_value(list,e));
                if(ini_section_exists(global.CharLoadName) &amp;&amp; ds_list_find_index(listtemo,string(ini_read_real("Char"+string(i),"Ref",""))) == -1)
                {
                    ds_list_add(listtemo,string(ini_read_real("Char"+string(i),"Ref","")))
                    script_execute(LoadCards);
                    tempY = global.roomHeight/2;
                    tempX = (global.roomWidth / 6)-25;
                    inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);     
                    e +=1;
                    i = 0;
                }
             ini_close();   
            }
        }
    }
}
if(room == RoomDiary)
{
    ini_open(global.historyINI);
    if(ini_section_exists("Year"+string(global.JYear) + " - Week"+string(global.JWeek)))
    {
        script_execute(LoadHistory);  
        textFeilds = 7;//number of text boxes we want.
        for(i = 0; i &lt; textFeilds; i++)
        {      
            if(i == 0)
            {
            inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }          
            if(i == 1)
            {

            global.RoomState = 0;
            ini_open(global.historyINI)
            global.EventLoadName = ini_read_string("Year"+string(global.JYear) + " - Week"+string(global.JWeek),"Event","");
            ini_close();
            script_execute(LoadCards);  
            inst = instance_create((global.roomWidth/5)*3,global.roomHeight/2,CardBacking);     
            }
            if(i == 2)
            {
                global.RoomState = 1;
                ini_open(global.historyINI)
                global.ActionLoadName = ini_read_string("Year"+string(global.JYear) + " - Week"+string(global.JWeek),"Action","");
                ini_close();
                script_execute(LoadCards);  
                inst = instance_create(((global.roomWidth/5)*4)+25,global.roomHeight/2,CardBacking);       
            }
            if(i == 3)
            {
                //int
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
            if(i == 4)
            {   
                //Char
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
            if(i == 5)
            {
                //Well
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 50;
                global.tempTextBoxY += 50;
            }
            if(i == 6)
            {
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 75;
                global.tempTextBoxY += 75;
            }
        }
    }
    ini_close();
}
}

if(room == RoomCharacter)
{
        textFeilds = 4;//number of text boxes we want.
        for(i = 0; i &lt; textFeilds; i++)
        {      
        
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        }
}

    // if(100000 == 2)  
        //global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
        //global.card1[global.eventActionCardsNum] = 0;
        //global.eventActionCardsNum -= 1;
        //for(i = 0; i &lt;= global.eventActionCardsNum; i++)
        //{
        //    tempAction = "Action"+string(i+1);
        //    global.card1[i] = ini_read_real(eventName,tempAction,0);
        //}
        //global.card2 = ini_read_real(eventName,"Cons2",0);
        //global.card3 = ini_read_real(eventName,"Info3",0);
        //global.card4 = ini_read_real(eventName,"Char4",0);
    //    ini_close();
      //  var inst;
        //textFeilds = global.eventActionCardsNum + 4;//number of text boxes we want.
    //    for(i = 0; i &lt; textFeilds; i++)
      //  {      
        //    
    //        inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
    //        global.tempInputBoxY += 25;
    //        global.tempTextBoxY += 25;
      //  }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
