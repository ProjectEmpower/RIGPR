<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//on create, create the variable and set
drag = 0 //drag is used when moving the sceen
currentPosX = 0//current x/y is used when checking if the screen has been moved.
currentPosY = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//step occurs when the code is running, so when the mouse button is clicked, 
//drag will be true, the following code will run.
if(drag == 1) //if drag is 1 (true)
{
    //sets the view when dragging using the mouse position
    view_xview = dragX - (mouse_x - view_xview) 
    view_yview = dragY - (mouse_y - view_yview)
        
    //makes sure the view stays within the boundries of the room
    view_xview = max(0, min(view_xview, room_width - view_wview)) 
    view_yview = max(0, min(view_yview, room_height - view_hview))
    
    
    //sets the button postions when the screen is in movement
   

    editorModeDisplay.x = view_xview + global.editorModeDisplayX;//editor mode hud element
    editorModeDisplay.y = view_yview + global.editorModeDisplayY;
    
    WeekTextDraw.x = view_xview+ global.weekX;//week variable that is drawn
    WeekTextDraw.y = view_yview+ global.weekY;

    ButtonWeekLeft.x = view_xview + global.WeekLeftButtonX;//left arrow button
    ButtonWeekLeft.y = view_yview + global.WeekLeftButtonY;
    ButtonWeekRight.x = view_xview + global.WeekRightButtonX;//right arrow button
    ButtonWeekRight.y = view_yview + global.WeekRightButtonY;
    TextOnMap.x = view_xview + global.TextOnMapX;
    TextOnMap.y = view_yview + global.TextOnMapY;
    //this code checks the current position vs the view, if its different (the screen has moved)
    //then the movelock will be set to 1 (true);
    

    for(i = 0; i &lt; instance_number(TextInputBox); i++)
    {
        

        global.textboxArray[i].x = view_xview + global.mapInputBoxX;
        global.textboxArray[i].y = view_yview + (global.tempInputBoxY-(9*25))+(i*25);
               
    }
        

    if(currentPosX != view_xview or currentPosY != view_yview)//this code used to stop room change when the user is draging the screen and has clicked on a building
    {
        global.moveLock = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when the left mouse button is released (after moving)
drag = 0//remove drag
global.moveLock = 0;//remove the lock
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//When the user clicks down on the left mouse button
drag = 1//turns on drag variable (true)

dragX = mouse_x//sets the dragX and dragY positions to the mouse's current position
dragY = mouse_y

currentPosX = view_xview;//sets the currentx/y view to the variables below, this is checked against any new view position, when the user clicks
currentPosY = view_yview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
