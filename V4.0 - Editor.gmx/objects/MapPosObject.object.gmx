<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when the room ends
global.currentX = view_xview//sets the current x/y position global variable to the current x/yview (view position on map screen)
global.currentY = view_yview
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when the room starts
view_xview = global.currentX //set the current view to the view stored in global current x/y
view_yview = global.currentY  

view_wview[0] = global.roomWidth //set the view width/height to the global variable roomWidth/roomHeight, this is set when the game starts and the player changes the screen size using options
view_hview[0] = global.roomHeight
global.mapInstanceCount = instance_count;
//the following code sets the default positions of the buttons, set in the buttons creation code
//this adds that position to the current view of the screen to keep them in the right place.


WeekTextDraw.x = view_xview+ global.weekX;//current week variable that is drawn on screen
WeekTextDraw.y = view_yview+ global.weekY;


editorModeDisplay.x = view_xview + global.editorModeDisplayX; //editor mode hud display
editorModeDisplay.y = view_yview + global.editorModeDisplayY;

ButtonWeekLeft.x = view_xview + global.WeekLeftButtonX; //arrow for week left
ButtonWeekLeft.y = view_yview + global.WeekLeftButtonY;
ButtonWeekRight.x = view_xview + global.WeekRightButtonX; //arrow for week right
ButtonWeekRight.y = view_yview + global.WeekRightButtonY;
TextOnMap.x = view_xview + global.TextOnMapX;
TextOnMap.y = view_yview + global.TextOnMapY;
for(i = 0; i &lt; instance_number(TextInputBox); i++)
{  
    global.textboxArray[i].x = view_xview + global.mapInputBoxX;
    global.textboxArray[i].y = view_yview + (global.tempInputBoxY-(9*25))+(i*25);
           
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
