<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ButtonSpriteDelete</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets positions
ButtonDeleteCard.x = 100;
ButtonDeleteCard.y = room_height-50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this button deletes the currently selected card
if(global.RoomState == 0)
{
    if(global.totalEventCards &gt; 0)
    {
        ini_open(global.cardEventINI);
        ini_section_delete(global.eventName);
        ini_close();
        for(i = global.eventRef; i &lt; global.totalEventCards; i++)
        {
            currRef = string(i)//sets currRef to the current loop iteration in string format
            tempEventName = "Event"+currRef//writes "Location#loopREF#" to a variable    
             nextI = i+1; //next in loop
            nextRef = string(nextI); //sets nextref to the next loop iteration in string format
            NextEventName = "Event"+nextRef; //writes "location#nextRef#" to a variable
                
            ini_open(global.cardEventINI); //opens the ini file   
            if(ini_section_exists(NextEventName) and !ini_section_exists(tempEventName)) //checks that the next item in the list exists, and the current doesnt
            {
                    //reads all relevent info from the next event
                    TempName = ini_read_string(NextEventName,"Card Name",""); 
                    TempText = ini_read_string(NextEventName,"Card Text","");
                    TempMythical = ini_read_real(NextEventName,"Mythical",0);  
                    TempWell = ini_read_real(NextEventName,"Well",0);  
                    TempChar = ini_read_real(NextEventName,"Char",0);  
                    TempInt = ini_read_real(NextEventName,"Int",0);  
                    TempCharCard = ini_read_real(NextEventName,"Char4",0);
                    TempInfoCard = ini_read_real(NextEventName,"Info3",0);
                    TempConsCard = ini_read_real(NextEventName,"Cons2",0);  
                    TempActionCards = ini_read_real(NextEventName,"Action Cards",0);                              
                    for(e = 0; e &lt; TempActionCards; e++)
                    {
                        actionRef= string(e); //sets the currRef variable to a string of the global TotalInstanceNumber, this is the number of instances currently used
                        actionName = "Action"+actionRef; //this sets lcoation name to "location#REF#"
                        tempActionName[e] = ini_read_real(NextEventName,actionName,0);             
                    }
                //writes the info to the current Location
                ini_write_real(tempEventName,"Ref",i);
                ini_write_string(tempEventName,"Event Name",TempName); 
                ini_write_string(tempEventName,"Event Text",TempText);  
                ini_write_real(tempEventName,"Mythical",TempMythical);  
                ini_write_real(tempEventName,"Well",TempWell);  
                ini_write_real(tempEventName,"Char",TempChar);  
                ini_write_real(tempEventName,"Int",TempInt);  
                ini_write_real(tempEventName,"Char4",TempCharCard);
                ini_write_real(tempEventName,"Info3",TempInfoCard);
                ini_write_real(tempEventName,"Cons2",TempConsCard);  
                ini_write_real(tempEventName,"Action Cards",TempActionCards);   
                for(e = 0; e &lt; TempActionCards; e++)
                {
                    ini_write_real(tempEventName,actionName,tempActionName[e]);             
                }
                ini_section_delete(NextEventName); //deletes the next location
                ini_close(); //closes the ini file       
            }        
        }
        global.totalEventCards -= 1; //after running, this will decrease the total instance number by 1
    }
}
if(global.RoomState == 1)
{
    if(global.totalActionCards &gt; 0)
    {
        ini_open(global.cardActionINI);
        ini_section_delete(global.cardName);
        ini_close();
        for(i = global.cardRef; i &lt; global.totalActionCards; i++)
        {
            currRef = string(i)//sets currRef to the current loop iteration in string format
            tempCardName = "Action"+currRef//writes "Location#loopREF#" to a variable    
             nextI = i+1; //next in loop
            nextRef = string(nextI); //sets nextref to the next loop iteration in string format
            NextCardName = "Action"+nextRef; //writes "location#nextRef#" to a variable
                
            ini_open(global.cardActionINI); //opens the ini file   
            if(ini_section_exists(NextCardName) and !ini_section_exists(tempCardName)) //checks that the next item in the list exists, and the current doesnt
            {
                //reads all relevent info from the next event
                TempName = ini_read_string(NextCardName,"Card Name",""); 
                TempText = ini_read_string(NextCardName,"Card Text",""); 
                TempMythical = ini_read_real(NextCardName,"Mythical",0);  
                TempWell = ini_read_real(NextCardName,"Well",0);  
                TempChar = ini_read_real(NextCardName,"Char",0);  
                TempInt = ini_read_real(NextCardName,"Int",0);  
                TempInfoCard = ini_read_real(NextCardName,"Info Cards",0);
                    
                //writes the info to the current Location
                ini_write_real(tempCardName,"Ref",i);
                ini_write_string(tempCardName,"Card Name",TempName); 
                ini_write_string(tempCardName,"Card Text",TempText);  
                ini_write_real(tempCardName,"Mythical",TempMythical);  
                ini_write_real(tempCardName,"Well",TempWell);  
                ini_write_real(tempCardName,"Char",TempChar);  
                ini_write_real(tempCardName,"Int",TempInt);  
                ini_write_real(tempCardName,"Info Cards",TempInfoCard);
                ini_section_delete(NextCardName); //deletes the next location
                ini_close(); //closes the ini file       
            }        
        }
        global.totalActionCards -= 1; //after running, this will decrease the total instance number by 1
    }
}
if(global.RoomState == 2)
{
    if(global.totalConsCards &gt; 0)
    {
        ini_open(global.cardConsINI);
        ini_section_delete(global.consName);
        ini_close();
        for(i = global.consCardRef; i &lt; global.totalConsCards; i++)
        {
            currRef = string(i)//sets currRef to the current loop iteration in string format
            tempCardName = "Cons"+currRef//writes "Location#loopREF#" to a variable    
             nextI = i+1; //next in loop
            nextRef = string(nextI); //sets nextref to the next loop iteration in string format
            NextCardName = "Cons"+nextRef; //writes "location#nextRef#" to a variable
                
            ini_open(global.cardConsINI); //opens the ini file   
            if(ini_section_exists(NextCardName) and !ini_section_exists(tempCardName)) //checks that the next item in the list exists, and the current doesnt
            {
                //reads all relevent info from the next event
                TempName = ini_read_string(NextCardName,"Card Name",""); 
                TempText = ini_read_string(NextCardName,"Card Text","");
                TempWell = ini_read_real(NextCardName,"Well",0);  
                TempChar = ini_read_real(NextCardName,"Char",0);  
                TempInt = ini_read_real(NextCardName,"Int",0);  
                TempInfoCard = ini_read_real(NextCardName,"Info Cards",0);
                    
                //writes the info to the current Location
                ini_write_real(tempCardName,"Ref",i);
                ini_write_string(tempCardName,"Card Name",TempName); 
                ini_write_string(tempCardName,"Card Text",TempText);  
                ini_write_real(tempCardName,"Well",TempWell);  
                ini_write_real(tempCardName,"Char",TempChar);  
                ini_write_real(tempCardName,"Int",TempInt);  
                ini_write_real(tempCardName,"Info Cards",TempInfoCard);
                ini_section_delete(NextCardName); //deletes the next location
                ini_close(); //closes the ini file       
            }        
        }
        global.totalConsCards -= 1; //after running, this will decrease the total instance number by 1
    }
}
if(global.RoomState == 3)
{
    if(global.totalInfoCards &gt; 0)
    {
        ini_open(global.cardInfoINI);
        ini_section_delete(global.infoName);
        ini_close();
        for(i = global.infoCardRef; i &lt; global.totalInfoCards; i++)
        {
            currRef = string(i)//sets currRef to the current loop iteration in string format
            tempCardName = "Info"+currRef//writes "Location#loopREF#" to a variable    
             nextI = i+1; //next in loop
            nextRef = string(nextI); //sets nextref to the next loop iteration in string format
            NextCardName = "Info"+nextRef; //writes "location#nextRef#" to a variable
                
            ini_open(global.cardInfoINI); //opens the ini file   
            if(ini_section_exists(NextCardName) and !ini_section_exists(tempCardName)) //checks that the next item in the list exists, and the current doesnt
            {
                //reads all relevent info from the next event
                TempName = ini_read_string(NextCardName,"Card Name",""); 
                TempText = ini_read_string(NextCardName,"Card Text","");  
                TempLink = ini_read_real(NextCardName,"Link","");  
                    
                //writes the info to the current Location
                ini_write_real(tempCardName,"Ref",i);
                ini_write_string(NextCardName,"Card Name",TempName); 
                ini_write_string(NextCardName,"Card Text",TempText);  
                ini_write_string(NextCardName,"Link",TempLink);  
                ini_section_delete(NextCardName); //deletes the next location
                ini_close(); //closes the ini file       
            }        
        }
        global.totalInfoCards -= 1; //after running, this will decrease the total instance number by 1
    }
}
if(global.RoomState == 4)
{
    if(global.totalCharCards &gt; 0)
    {
        ini_open(global.cardCharINI);
        ini_section_delete(global.charName);
        ini_close();
        for(i = global.charCardRef; i &lt; global.totalCharCards; i++)
        {
            currRef = string(i)//sets currRef to the current loop iteration in string format
            tempCardName = "Char"+currRef//writes "Location#loopREF#" to a variable    
             nextI = i+1; //next in loop
            nextRef = string(nextI); //sets nextref to the next loop iteration in string format
            NextCardName = "Char"+nextRef; //writes "location#nextRef#" to a variable
                
            ini_open(global.cardCharINI); //opens the ini file   
            if(ini_section_exists(NextCardName) and !ini_section_exists(tempCardName)) //checks that the next item in the list exists, and the current doesnt
            {
                //reads all relevent info from the next event
                TempName = ini_read_string(NextCardName,"Card Name",""); 
                TempText = ini_read_string(NextCardName,"Card Text","");
                TempInfoCard = ini_read_real(NextCardName,"Info Cards",0);
                    
                //writes the info to the current Location
                ini_write_real(tempCardName,"Ref",i);
                ini_write_string(tempCardName,"Card Name",TempName); 
                ini_write_string(tempCardName,"Card Text",TempText);  
                ini_write_real(tempCardName,"Info Cards",TempInfoCard);
                ini_section_delete(NextCardName); //deletes the next location
                ini_close(); //closes the ini file       
            }        
        }
        global.totalCharCards -= 1; //after running, this will decrease the total instance number by 1
    }
}
room = RoomCardDeck; //swaps room
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
