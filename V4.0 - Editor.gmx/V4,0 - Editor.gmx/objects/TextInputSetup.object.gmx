<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.InputBoxX = global.roomWidth/5
global.InputBoxY = global.roomHeight/6
global.InputTextX = global.roomWidth/5
global.InputTextY = global.roomHeight/6
//This code is used for actually creating the text box instances to didplay on screen
global.tempInputBoxX = global.InputBoxX+149; //sets temp input box X
global.mapInputBoxX = global.roomWidth-100;

global.tempInputBoxY = global.InputBoxY;//sets temp input box Y
global.tempTextBoxY = global.InputTextY;//sets temp text box Y
global.textBoxInstanceRef = instance_count;//This is the number of objects before instances are created.
global.focus = 0; //box focus

if(room == RoomLocationAdd)
{

    //this displays the text on the location add screen (once you click on a location to edit its information)
    textFeilds = 4;//number of text boxes we want.
    ini_open(global.locationINI)//open ini file
    global.realLocationName = ini_read_string(global.tempLocation,"Real Location Name",""); //Reads the name of location from ini
    global.description = ini_read_string(global.tempLocation,"Description","");//reads the description from ini
    global.locationMyth = ini_read_real(global.tempLocation, "Mythical", "");//reads the mythical status from ini
    global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
    ini_close();//closes the ini
    for(i = 0; i &lt; textFeilds; i++)//for the number of text boxes set above
    {
        if(i == 1)//if i = description box then it will set the position based on the increased size
        { 
            global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 100;//increases the location of the text/input boxes (large increase for multiple line)
            global.tempTextBoxY += 100;
        }
        else
        {
            //creates the instanes of the text boxes on screen.
            global.textboxArray[i] = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
    
        }
            global.tempInputBoxY += 25; //increases the location of the text/input boxes (standard increase for one line)
            global.tempTextBoxY += 25;
    }
    if(global.locationEventNumber &gt; 0)//if there are events
    {
        global.tempInputBoxY += 75; //set the position 
        global.tempTextBoxY += 75;   
       
        tempEventID = string(global.EventID);
        global.tempEvent = "Event"+tempEventID;//setup the event name for accessig the ini
        tempEventType = global.tempEvent+"Type";
        tempEventWeek = global.tempEvent+"Week";
        tempEventmyth = global.tempEvent+"Mythical";
        ini_open(global.locationINI);//open the ini
        global.eventType = ini_read_real(global.tempLocation, tempEventType, 0);//read the event type
        global.eventWeek = ini_read_real(global.tempLocation, tempEventWeek, 0);//read the event week
        global.eventMyth = ini_read_real(global.tempLocation, tempEventmyth, 0);//read the event mythical status
        ini_close();
        global.oldWeek = global.eventWeek;
        for(i = 4; i &lt; 7; i++)//for the number of feilds (type,week,mythical)
        {
            global.textboxArray[i] = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //create an instance at the location using the object 
            global.tempInputBoxY += 25; //incrase the position of the text boxes
            global.tempTextBoxY += 25;   
        }
    }
}
if(room == RoomCardEdit)
{
    if(global.RoomState == 0)//event card
    {
        //works the same as above, but for roomEventAdd and roomEvenEdit, this is used to display the events information 
        TeventRef = string(global.eventRef);
        global.eventName = "Event"+TeventRef;
        ini_open(global.cardEventINI)
        global.realEventName = ini_read_string(global.eventName,"Event Name",""); //writes the instance number (global TotalInstanceNum) to "instanceRef" inside the ini file.;
        global.eventText = ini_read_string(global.eventName,"Event Text","");
        global.reqEventInt = ini_read_real(global.eventName,"Int",0);
        global.reqEventChar = ini_read_real(global.eventName, "Char", 0);
        global.reqEventWell = ini_read_real(global.eventName, "Well",0);
        global.eventMythical = ini_read_real(global.eventName,"Mythical",0);
        global.eventActionCardsNum = ini_read_real(global.eventName,"Action Cards",0);
        global.card1[global.eventActionCardsNum] = 0;
        for(i = 0; i &lt;= global.eventActionCardsNum; i++)
        {
            tempAction = "Action"+string(i+1);
            global.card1[i] = ini_read_real(global.eventName,tempAction,0);
        }
        global.card2 = ini_read_real(global.eventName,"Cons2",0);
        global.card3 = ini_read_real(global.eventName,"Info3",0);
        global.card4 = ini_read_real(global.eventName,"Char4",0);
        textFeilds = global.eventActionCardsNum + 10;//number of text boxes we want.
        ini_close();
        for(i = 0; i &lt; textFeilds; i++)
        {
            if(i == 1)//if i = description box then it will set the position based on the increased size
            { 
                global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
                global.tempInputBoxY += 100;//increases the location of the text/input boxes (large increase for multiple line)
                global.tempTextBoxY += 100;
            }
            else
            {
                //creates the instanes of the text boxes on screen.
                global.textboxArray[i] = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
        
            }
            global.tempInputBoxY += 25; //increases the location of the text/input boxes (standard increase for one line)
            global.tempTextBoxY += 25;
        }
    }
    if(global.RoomState == 1)//action card
    {
        //displays the cards information on the card add screen, same way as above.
        TcardRef = string(global.cardRef);
        global.cardName = "Action"+TcardRef;
        textFeilds = 3;//number of text boxes we want.
        ini_open(global.cardActionINI)
        global.realCardName = ini_read_string(global.cardName,"Card Name","");
        global.cardText = ini_read_string(global.cardName,"Card Text","");
        global.cardMythical = ini_read_real(global.cardName,"Mythical",0);
        ini_close();
        var inst;
        for(i = 0; i &lt; textFeilds; i++)
        {
            global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        }
    }
    if(global.RoomState == 2)//cons card
    {
        //displays the cards information on the card add screen, same way as above.
        TconsRef = string(global.consCardRef);
        global.consName = "Cons"+TconsRef;
        textFeilds = 5;//number of text boxes we want.
        ini_open(global.cardConsINI)
        global.realConsName = ini_read_string(global.consName,"Card Name","");        
        global.consInt = ini_read_real(global.consName ,"Int",0);
        global.consChar = ini_read_real(global.consName ,"Char",0);
        global.consWell = ini_read_real(global.consName ,"Well",0);
        global.consCardText = ini_read_string(global.consName ,"Card Text","");
        ini_close();
        var inst;
        
        for(i = 0; i &lt; textFeilds; i++)
        {
            if(i == 1)//if i = description box then it will set the position based on the increased size
            { 
                global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
                global.tempInputBoxY += 100;//increases the location of the text/input boxes (large increase for multiple line)
                global.tempTextBoxY += 100;
            }
            else
            {
                //creates the instanes of the text boxes on screen.
                global.textboxArray[i] = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            }
            global.tempInputBoxY += 25; //increases the location of the text/input boxes (standard increase for one line)
            global.tempTextBoxY += 25;
        }
    }
    if(global.RoomState == 3)//info card
    {
        //displays the cards information on the card add screen, same way as above.
        TinfoRef = string(global.infoCardRef);
        global.infoName = "Info"+TinfoRef;
        textFeilds = 3;//number of text boxes we want.
        ini_open(global.cardInfoINI)
        global.realInfoName = ini_read_string(global.infoName,"Card Name","");
        global.infoCardText = ini_read_string(global.infoName,"Card Text","");
        global.infoLink = ini_read_string(global.infoName,"Link",0);
        ini_close();
        var inst;
        
        for(i = 0; i &lt; textFeilds; i++)
        {
            if(i != 0)//if i = description box then it will set the position based on the increased size
            { 
                global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
                global.tempInputBoxY += 100;//increases the location of the text/input boxes (large increase for multiple line)
                global.tempTextBoxY += 100;
            }
            else
            {
                //creates the instanes of the text boxes on screen.
                global.textboxArray[i] = instance_create(global.tempInputBoxX ,global.tempInputBoxY,TextInputBox);  //creats an instance at the location using the object 
            }
            global.tempInputBoxY += 25; //increases the location of the text/input boxes (standard increase for one line)
            global.tempTextBoxY += 25;
        }
    }
}
if(room == RoomCardDeck)
{
    if(global.RoomState == 0)//event card
    {
        //this code is to make sure that the list length doesnt exceed 20
        if(global.totalEventCards  &gt;= 20)
        {
            global.listLength = 20;   
        }
        else
        {
            global.listLength = 20 - (20 - global.totalEventCards);
        }
        //used to display the lists of events, works the same as previously
        for(i = 0; i &lt; global.listLength; i++)
        {
            tempEventRef = string(i+1);                   
            tempEvent = "Event"+tempEventRef;
            ini_open(global.cardEventINI);
            global.eventRef = ini_read_real(tempEvent,"Ref","");
            global.eventText = ini_read_string(tempEvent,"Event Text","");
            global.realEventName = ini_read_string(tempEvent,"Event Name","");
            global.reqEventInt = ini_read_real(tempEvent,"Int",0);
            global.reqEventChar = ini_read_real(tempEvent, "Char", 0);       
            global.reqEventWell = ini_read_real(tempEvent, "Well",0);
            global.eventMythical = ini_read_real(tempEvent,"Mythical",0);
            global.eventActionCardsNum = ini_read_real(tempEvent,"Action Cards",0);
            ini_close();
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        }
    }
    if(global.RoomState == 1)//Action card
    {
        //this code is to make sure that the list length doesnt exceed 20
        if(global.totalActionCards  &gt;= 20)
        {
            global.listLength = 20;   
        }
        else
        {
            global.listLength = 20 - (20 - global.totalActionCards);
        }
        if(global.lastState != 0)
        {
            eventMythical = 2;  
        }
        else
        {
            ini_open(global.cardEventINI);
            eventMythical = ini_read_real(global.eventName,"Mythical", 0);
            ini_close();  
        }
         //used to display the lists of card, works the same as previously
        for(i = 0; i &lt; global.listLength; i++)
        {
            tempCardRef = string(i+1);       
            tempCard = "Action"+tempCardRef;
            ini_open(global.cardActionINI);
            global.cardRef = ini_read_real(tempCard,"Ref",0);
            global.realCardName = ini_read_string(tempCard,"Card Name","");
            global.cardText = ini_read_string(tempCard,"Card Text","");
            global.cardMythical = ini_read_real(tempCard,"Mythical",0);
            ini_close();
            if(global.cardMythical == eventMythical or eventMythical == 2)
            {
                global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
        }
    }
    if(global.RoomState == 2)//Consequence
    {
        //this code is to make sure that the list length doesnt exceed 20
        if(global.totalConsCards  &gt;= 20)
        {
            global.listLength = 20;   
        }
        else
        {
            global.listLength = 20 - (20 - global.totalConsCards);
        }
         //used to display the lists of card, works the same as previously
        for(i = 0; i &lt; global.listLength; i++)
        {
            tempConsCardRef = string(i+1);       
            tempConsCard = "Cons"+tempConsCardRef;
            ini_open(global.cardConsINI);
            global.consCardRef = ini_read_real(tempConsCard,"Ref",0);
            global.realConsName = ini_read_string(tempConsCard,"Card Name","");   
            global.consCardText = ini_read_string(tempConsCard,"Card Text","");
            global.consInt = ini_read_real(tempConsCard,"Int",0);
            global.consChar = ini_read_real(tempConsCard,"Char",0);
            global.consWell = ini_read_real(tempConsCard,"Well",0);
            ini_close();
            global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        
        }
    }
    if(global.RoomState == 3)//Info
    {
        //this code is to make sure that the list length doesnt exceed 20
        if(global.totalInfoCards  &gt;= 20)
        {
            global.listLength = 20;   
        }
        else
        {
            global.listLength = 20 - (20 - global.totalInfoCards);
        }
         //used to display the lists of card, works the same as previously
        for(i = 0; i &lt; global.listLength; i++)
        {
            tempInfoCardRef = string(i+1);       
            tempInfoCard = "Info"+tempInfoCardRef;
            ini_open(global.cardInfoINI);
            global.infoCardRef = ini_read_real(tempInfoCard,"Ref",0);
            global.realInfoName = ini_read_string(tempInfoCard,"Card Name","");
            global.infoCardText = ini_read_string(tempInfoCard,"Card Text","");
            global.infoLink = ini_read_string(tempInfoCard,"Link",0);
            
            ini_close();
            global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        
        }
    }
    if(global.RoomState == 4)//Character
    {
        //this code is to make sure that the list length doesnt exceed 20
        if(global.totalCharCards  &gt;= 20)
        {
            global.listLength = 20;   
        }
        else
        {
            global.listLength = 20 - (20 - global.totalCharCards);
        }
        //used to display the lists of card, works the same as previously
        for(i = 0; i &lt; global.listLength; i++)
        {
            tempCharCardRef = string(i+1);       
            tempCharCard = "Char"+tempCharCardRef;
            ini_open(global.cardCharINI);
           // global.consCardRef = ini_read_real(tempCharCard,"Ref",0);
         //   global.consCardText = ini_read_string(tempCharCard,"Card Text","");
          //  global.consInt = ini_read_real(tempCharCard,"Int",0);
          //  global.consChar = ini_read_real(tempCharCard,"Char",0);
          //  global.consWell = ini_read_real(tempCharCard,"Well",0);
            ini_close();
            global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        
        }
    }
}

if(room == RoomDeckList)
{
    for(i = 0; i &lt; 5; i++)
    {
        global.textboxArray[i] = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);         
        global.tempInputBoxY += 25;
        global.tempTextBoxY += 25;
    }
    
}
if(room == RoomMap)
{
    for(i = 0; i &lt; 9; i++)
    {
        global.textboxArray[i] = instance_create(global.mapInputBoxX,global.tempInputBoxY,TextInputBox);         
        global.tempInputBoxY += 25;
        global.tempTextBoxY += 25;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if anywhere is pressed on screen, it will change focus to 0 (so if outside of a button)
global.focus = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
