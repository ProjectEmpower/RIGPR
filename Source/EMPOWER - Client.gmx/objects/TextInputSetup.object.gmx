<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.InputBoxX = room_width/5
global.InputBoxY = room_height/6
global.InputTextX = room_width/5
global.InputTextY = room_height/6
//This code is used for actually creating the text box instances to didplay on screen
global.tempInputBoxX = global.InputBoxX+149; //sets temp input box X
global.tempInputBoxY = global.InputBoxY + 75//sets temp input box Y
global.tempTextBoxY = global.InputTextY + 75;//sets temp text box Y
global.textBoxInstanceRef = instance_count;//This is the number of objects before instances are created.
global.focus = 0; //box focus
global.startOrientation = display_get_orientation();
if(os_type == os_android and (global.startOrientation == display_portrait or global.startOrientation == display_portrait_flipped))
{
        if(room == RoomLocationView)
        {
           if(global.Cont == 1)
            { 
                eventType = 0;
                //global.tempLocation
                ini_open(global.locationINI);  
                 global.LocationStore = ini_read_string(global.tempLocation,"Real Location Name","");
                global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
                ini_close();
                global.eventNum = 0;
                for(i = 0; i &lt;=  global.locationEventNumber; i++)
                { 
                    ini_open(global.locationINI);      
                    tempEventWeek = "Event"+string(i+1)+"Week";
                    tempWeek = ini_read_real(global.tempLocation, tempEventWeek,0); //reads the number of events from ini
                    if(tempWeek == global.playerWeek)
                    {       
                        tempEventType = "Event"+string(i+1)+"Type";
                        global.event[global.eventNum] = ini_read_real(global.tempLocation, tempEventType,0); //reads the number of events from ini
                        ini_close();   
                        if(global.event[global.eventNum] != 0)
                        { 
                            global.eventNum += 1;
    
                        }
                        if(global.playerWeek == 0)
                            global.eventNum = 1;
                    }
                    ini_close();
                }
                for(i = 0; i &lt; global.eventNum; i++)
                {                        
                    if(global.playerWeek != 0)
                        global.EventLoadName = "Event"+string(global.event[global.tempPos]);
                    else
                        global.EventLoadName = "EventT";
                    global.RoomState = 0;
                    script_execute(LoadCards);
                }

                tempX = (global.roomWidth / 2)
                tempY = (global.roomHeight / 2)
                inst = instance_create(tempX,tempY,CardBacking); 
            }
        }
        
        if(room == RoomEventSelect)
        {
            if(global.MythicalTutorial == false)
            {
                global.cardNum = 0;
                eventType = 0;
                //global.tempLocation
                ini_open(global.cardEventINI);  
                if(global.playerWeek != 0) 
                    eventName = "Event"+string(global.eventRef);
                else
                {
                    eventName = "EventT";
                 }   
                global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                global.eventCharCard = ini_read_real(eventName,"Char Cards",0);
                ini_close();
                for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                {
                    ini_open(global.cardEventINI); 
                    tempAction = "Action"+string(i+1);
                    global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                    ini_close();
                    if(global.card[global.cardNum] != 0)
                    {
                        global.cardNum +=1;
                    }
                       

                }
                global.RoomState = 1;
                if(global.playerWeek != 0) 
                    global.ActionLoadName = "Action"+string(global.card[global.tempPos]);
                else
                    global.ActionLoadName = "ActionT";
                script_execute(LoadCards);
                tempX = (global.roomWidth / 2);
                tempY = global.roomHeight/2;
                inst = instance_create(tempX,tempY,CardBacking); 
               if(global.eventCharCard != 0 and global.eventCharCard != -1 or (global.TutorialSetup == true and global.CharacterTutorial == true))
               {
                    inst2 = instance_create(global.roomWidth - 125,125,CharCard);
               }
            }
            else
           {
                global.cardNum = 0;
                eventType = 0;
                //global.tempLocation
                    ini_open(global.cardEventINI); 
                    if(global.playerWeek != 0) 
                        eventName = "Event"+string(global.eventRef);
                    else
                    {
                        eventName = "EventT";
                     }   
                    global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                    global.eventCharCard = ini_read_real(eventName,"Char",0);
                    ini_close();
                    for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                    {
                        ini_open(global.cardEventINI);  
                        tempAction = "Action"+string(i+1);
                        global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                        ini_close();
                        if(global.card[global.cardNum] != 0)
                        {
                            global.cardNum +=2;
    
                        }
                    }
                for(i = 0; i &lt; global.cardNum; i++)
                {

                    if(global.tempPos == i)
                    {
                        global.RoomState = 1;
                        global.ActionLoadName = "ActionT";
                        script_execute(LoadCards);
                        tempX = global.roomWidth / 2;
                        tempY = global.roomHeight/2;
                        global.i = i;     
                        inst = instance_create(tempX,tempY,CardBacking);    
                                   
                    }
                }            
            }
        }
    if(room == RoomInfoView)
    {
        global.cardNum = 0;
        switch(global.InfoViewRoomState)
        {
            case 0: 
            if(global.playerWeek != 0) 
                global.EventLoadName = "Event"+string(global.InfoViewRef);
            else
                global.EventLoadName = "EventT";     
            global.RoomState = 0;           
            script_execute(LoadCards);
            global.cardNum += 1;

            break;
            case 1: 
            if(global.playerWeek != 0) 
                global.ActionLoadName = "Action"+string(global.InfoViewRef);
            else
                global.ActionLoadName = "ActionT";    
            global.RoomState = 1;
            script_execute(LoadCards);
            global.cardNum += 1;

            break;
            case 2: 
            if(global.playerWeek != 0) 
                global.ConsLoadName = "Cons"+string(global.InfoViewRef);
            else
                global.ConsLoadName = "ConsT";    
            global.RoomState = 2;
            script_execute(LoadCards);
            global.cardNum += 1;

            break;
            case 4: 
            if(global.playerWeek != 0) 
                global.CharLoadName = "Char"+string(global.InfoViewRef);
            else
                global.CharLoadName = "CharT";    
            global.RoomState = 4;
            script_execute(LoadCards);
            global.cardNum += 1;

            break;
        }
            tempY = global.roomHeight/2;
            tempX = (global.roomWidth / 2);   
            if(global.infoCardRef != 0)
            {

                global.cardNum += 1;
                if(global.tempPos == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                global.RoomState = 3;
                if(global.playerWeek != 0) 
                    global.InfoLoadName = "Info"+string(global.infoCardRef);
                else
                    global.InfoLoadName = "InfoT";
                script_execute(LoadCards);
                if(global.tempPos == 1)
                    inst = instance_create(tempX * (1),tempY,CardBacking);                     
            }
            else
                inst = instance_create(tempX * (1),tempY,CardBacking);    
    }
        if(room == RoomConsView)
        {
        
                  global.RoomState = 2;  
                if(global.playerWeek != 0) 
                    global.ConsLoadName = "Cons"+string(global.consCardRef);
                else
                    global.ConsLoadName = "ConsT";
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);
                inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        }
        if(room == RoomNewGame)
        {
                textFeilds = 2;//number of text boxes we want.
            for(i = 0; i &lt; textFeilds; i++)
          {      
            if(i == 1)
            {
                global.tempInputBoxY += 50;
               global.tempTextBoxY += 50;           
            }
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
               global.tempInputBoxY += 25;
               global.tempTextBoxY += 25;
           }
        }
       if(room == RoomCharView)
        {
                if(global.playerWeek != 0) 
                    global.CharLoadName = "Char"+string(global.eventCharCard);
                else
                    global.CharLoadName = "CharT";
              global.RoomState = 4;  
              script_execute(LoadCards);
            inst = instance_create(global.roomWidth/2,global.roomHeight/2,CardBacking);     
        }
        if(room == RoomCards or room == RoomDiary)
        {                 
            
        }
}

//PC or mobile Landscape
else//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
{
   if(room == RoomLocationView)
    {
        if(global.Cont == 1)
        {
            eventType = 0;
            ini_open(global.locationINI);  
             global.LocationStore = ini_read_string(global.tempLocation,"Real Location Name","");
            global.locationEventNumber = ini_read_real(global.tempLocation, "Number of Events",0); //reads the number of events from ini
            ini_close();
            global.eventNum = 0;
            for(i = 0; i &lt;= global.locationEventNumber; i++)
            {           
                ini_open(global.locationINI);  
                tempEventWeek = "Event"+string(i+1)+"Week";
                tempWeek = ini_read_real(global.tempLocation, tempEventWeek,0); //reads the number of events from ini
                if(tempWeek == global.playerWeek)
                {
                    tempEventType = "Event"+string(i+1)+"Type";
                    global.event[global.eventNum] = ini_read_real(global.tempLocation, tempEventType,0); //reads the number of events from ini
                    ini_close();   
                    if(global.event[global.eventNum] != 0)
                    {          
                        global.eventNum += 1;
                    }
                    if(global.playerWeek == 0)
                        global.eventNum = 1;
                }
                ini_close();
            }
            for(i = 0; i &lt; global.eventNum; i++)
            {                        
                if(global.playerWeek != 0)
                    global.EventLoadName = "Event"+string(global.event[i]);
                else
                    global.EventLoadName = "EventT";
                global.RoomState = 0;
                script_execute(LoadCards);
                if(global.eventNum == 1)
                {
                    tempX = (global.roomWidth / 2);
                }
                if(global.eventNum == 2)
                {
                    if(i == 0)
                        tempX = (global.roomWidth / 2) - 150;
                    if(i == 1)
                        tempX = (global.roomWidth / 2) + 150;
                }
                if(global.eventNum == 3)
                {
                    if(i == 0)
                        tempX = (global.roomWidth / 2) - 275;
                    if(i == 1)
                        tempX = (global.roomWidth / 2);
                    if(i == 2)
                        tempX = (global.roomWidth / 2) + 275;
                }
                tempY = global.roomHeight/2;
                inst = instance_create(tempX,tempY,CardBacking); 
            }
        }
    }
    if(room == RoomEventSelect)
    {
        if(global.MythicalTutorial == false)
        {
            global.cardNum = 0;
            eventType = 0;
            //global.tempLocation
            ini_open(global.cardEventINI); 
            if(global.playerWeek != 0) 
                eventName = "Event"+string(global.eventRef);
            else
            {
                eventName = "EventT";
             }   

            global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
            global.eventCharCard = ini_read_real(eventName,"Char Cards",0);
            ini_close();
            for(i = 0; i &lt;= global.eventActionCardsNum; i++)
            {
                ini_open(global.cardEventINI);  
                tempAction = "Action"+string(i+1);
                global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                ini_close();
                if(global.card[global.cardNum] != 0)
                {
                    global.cardNum +=1;

                }
            }
            for(i = 0; i &lt; global.cardNum; i++)
            {
                global.RoomState = 1;
                if(global.playerWeek != 0) 
                    global.ActionLoadName = "Action"+string(global.card[i]);
                else
                    global.ActionLoadName = "ActionT";
                script_execute(LoadCards);
                if(global.cardNum == 1)
                {
                    tempX = (global.roomWidth / 2);
                }
                if(global.cardNum == 2)
                {
                    if(i == 0)
                        tempX = (global.roomWidth / 2) - 150;
                    if(i == 1)
                        tempX = (global.roomWidth / 2) + 150;
                }
                if(global.cardNum == 3)
                {
                    if(i == 0)
                        tempX = (global.roomWidth / 2) - 275;
                    if(i == 1)
                        tempX = (global.roomWidth / 2);
                    if(i == 2)
                        tempX = (global.roomWidth / 2) + 275;
                }
                tempY = global.roomHeight/2;
                inst = instance_create(tempX,tempY,CardBacking); 
           }
           if(global.eventCharCard != 0 and global.eventCharCard != -1 or (global.TutorialSetup == true and global.CharacterTutorial == true))
           {
                inst2 = instance_create(global.roomWidth - 125,125,CharCard);
           }
       }
       else
       {
            global.cardNum = 0;
            eventType = 0;
                ini_open(global.cardEventINI); 
                if(global.playerWeek != 0) 
                    eventName = "Event"+string(global.eventRef);
                else
                {
                    eventName = "EventT";
                 }   
                global.eventActionCardsNum = ini_read_real(eventName,"Action Cards",0);
                global.eventCharCard = ini_read_real(eventName,"Char",0);
                ini_close();
                for(i = 0; i &lt;= global.eventActionCardsNum; i++)
                {
                    ini_open(global.cardEventINI);  
                    tempAction = "Action"+string(i+1);
                    global.card[global.cardNum] = ini_read_real(eventName,tempAction,0);
                    ini_close();
                    if(global.card[global.cardNum] != 0)
                    {
                        global.cardNum +=2;

                    }
                }
            for(i = 0; i &lt; global.cardNum; i++)
            {
                global.RoomState = 1;
                global.ActionLoadName = "ActionT";
                script_execute(LoadCards);
                    if(i == 0)
                        tempX = (global.roomWidth / 2) - 150;
                    if(i == 1)
                        tempX = (global.roomWidth / 2) + 150;
                tempY = global.roomHeight/2;
                global.i = i;
                inst = instance_create(tempX,tempY,CardBacking); 
            }            
        }
    }
    if(room == RoomInfoView)
    {
            switch(global.InfoViewRoomState)
            {
                case 0: 
                if(global.playerWeek != 0) 
                    global.EventLoadName = "Event"+string(global.InfoViewRef);
                else
                    global.EventLoadName = "EventT";                
                script_execute(LoadCards);
                global.RoomState = 0;
                break;
                case 1: 
                if(global.playerWeek != 0) 
                    global.ActionLoadName = "Action"+string(global.InfoViewRef);
                else
                    global.ActionLoadName = "ActionT";    
                script_execute(LoadCards);
                global.RoomState = 1;
                break;
                case 2: 
                if(global.playerWeek != 0) 
                    global.ConsLoadName = "Cons"+string(global.InfoViewRef);
                else
                    global.ConsLoadName = "ConsT";    
                script_execute(LoadCards);
                global.RoomState = 2;
                break;
                case 4: 
                if(global.playerWeek != 0) 
                    global.CharLoadName = "Char"+string(global.InfoViewRef);
                else
                    global.CharLoadName = "CharT";    
                script_execute(LoadCards);
                global.RoomState = 4;
                break;
            }
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);

        
                if(global.infoCardRef != 0)
                {
                    tempX = (global.roomWidth / 2)-150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                    global.RoomState = 3;
                    if(global.playerWeek != 0) 
                        global.InfoLoadName = "Info"+string(global.infoCardRef);
                    else
                        global.InfoLoadName = "InfoT";
                    script_execute(LoadCards);
                    tempX = (global.roomWidth / 2)+150;
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
                }
                else if(global.infoCardRef == 0)
                    inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        
        
        }
        if(room == RoomConsView)
        {
        
                  global.RoomState = 2;  
                if(global.playerWeek != 0) 
                    global.ConsLoadName = "Cons"+string(global.consCardRef);
                else
                    global.ConsLoadName = "ConsT";
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 2);
                inst = instance_create(tempX * (1),tempY,CardBacking); 
        
        
        }
        if(room == RoomNewGame)
        {
                textFeilds = 2;//number of text boxes we want.
            for(i = 0; i &lt; textFeilds; i++)
          {      
            if(i == 1)
            {
                global.tempInputBoxY += 50;
               global.tempTextBoxY += 50;           
            }
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
               global.tempInputBoxY += 25;
               global.tempTextBoxY += 25;
           }
        }
       if(room == RoomCharView)
        {
                if(global.playerWeek != 0) 
                    global.CharLoadName = "Char"+string(global.eventCharCard);
                else
                    global.CharLoadName = "CharT";
              global.RoomState = 4;  
              script_execute(LoadCards);
            inst = instance_create(global.roomWidth/2,global.roomHeight/2,CardBacking);     
        }
        if(room == RoomCards)
{                 
    e = 0;
    Year = 1;
    Week = 1;
    cardNum = 0;
    if(global.RoomState == 0)//event card
    {    
        listtemo = ds_list_create()
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            for(i = 0; i &lt;= global.totalEventCards; i++)
            {
                ini_open(global.historyINI);
                EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");//loads the event to check
                ini_close();
                     if("Event"+string(i) == EventStore &amp;&amp; ds_list_find_index(listtemo,"Event"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,EventStore) 
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - ds_list_size(listtemo));
            } 
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.EventLoadName = EventStore;//sets the card to load to the nae laoded above
                script_execute(LoadCards);//loads the cards info
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     //displays the card
                global.tempInputBoxY += 25;//sets the next cards text box position
                global.tempTextBoxY += 25;//sets next cards text position
            }

        }
        if(global.ListStyle == 1)
        {
            //this code is to make sure that the list length doesnt exceed 20

            //used to display the lists of events, works the same as previously
            for(i = 0; i &lt;= global.totalEventCards; i++)
            {
                ini_open(global.historyINI);
                EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");//loads the event to check
                ini_close();
                    if("Event"+string(i) == EventStore &amp;&amp; ds_list_find_index(listtemo,"Event"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,EventStore) 
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - ds_list_size(listtemo));
            } 
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.EventLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 6)-25;
                inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);     
            }
        }
    }
    if(global.RoomState == 1)//Action card
    {   
        listtemo = ds_list_create();
        if(global.ListStyle == 0)
        {
            for(i = 0; i &lt;= global.totalActionCards; i++)
            {
                ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0)                
                        ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                    else
                        ActionStore = "NONE";
                ini_close();
                   
                    if("Action"+string(i) == ActionStore &amp;&amp; ds_list_find_index(listtemo,"Action"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,ActionStore)
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.ActionLoadName = ds_list_find_value(listtemo,i);
                script_execute(LoadCards);
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;  
            }
        }
        
        if(global.ListStyle == 1)
        {
                    //this code is to make sure that the list length doesnt exceed 20

             //used to display the lists of card, works the same as previously
            for(i = 0; i &lt;= global.totalActionCards; i++)
            {
                ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0)                
                        ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                    else
                        ActionStore = "NONE";
                ini_close();
                    if("Action"+string(i) == ActionStore &amp;&amp; ds_list_find_index(listtemo,"Action"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,ActionStore)
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.ActionLoadName = ds_list_find_value(listtemo,i);
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 6)-25;
                inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);     
            }
        }
            
        
    }
    if(global.RoomState == 2)//Consequence
    {    
        listtemo = ds_list_create();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            for(i = 0; i &lt;= global.totalConsCards; i++)
            {
                    ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                    {               
                        ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                        ini_close();
                        ini_open(global.cardActionINI);
                        ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", -1));
                        ini_close();
                        if("Cons"+string(i) == ConsStore &amp;&amp; ds_list_find_index(listtemo,"Cons"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                        {
        
                            ds_list_add(listtemo,ConsStore) 
                            i = 0;
                            cardNum += 1;
                            Week +=1;
                        }
                    }

            }
            if( ds_list_size(listtemo) &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 -  ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {     
                global.ConsLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25; 
            }
        }
        if(global.ListStyle == 1)
        {
        //this code is to make sure that the list length doesnt exceed 20
            for(i = 0; i &lt;= global.totalConsCards; i++)
            {
                    ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                    {     
                        ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                        ini_close();
                        ini_open(global.cardActionINI);
                        ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", -1));
                        ini_close();
                        if("Cons"+string(i) == ConsStore &amp;&amp; ds_list_find_index(listtemo,"Cons"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                        {                       
                            ds_list_add(listtemo,ConsStore) 
                            i = 0;
                            cardNum += 1;
                            Week +=1;
                        }
                    }
            }
            if( ds_list_size(listtemo) &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 -  ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {                      
                global.ConsLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                tempY = global.roomHeight/2;
                tempX = (global.roomWidth / 6)-25;
                inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);     
            }
             //used to display the lists of card, works the same as previously
        }
    }
    if(global.RoomState == 3)//Info
    {
        listtemo = ds_list_create();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            //used to display the lists of card, works the same as previously
            for(e = 0; e &lt; 4; e++)
            {    
                for(i = 0; i &lt;= global.totalInfoCards; i++)
                {        
                    if(e ==0)//events info
                    {
                        ini_open(global.historyINI);
                        EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                
                        ini_close();
                        ini_open(global.cardEventINI);
                        InfoStore = "Info"+string(ini_read_real(EventStore,"Info Cards", -1));
                        ini_close();
                    }
                    if(e ==1)//actions info
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                        {     
                            ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                            ini_close();
                            ini_open(global.cardActionINI);
                            InfoStore = "Info"+string(ini_read_real(ActionStore,"Info Cards", -1));
                            ini_close();
                        }
                    }
                    if(e ==2)
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                        {    
                            ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                            ini_close();
                            ini_open(global.cardActionINI);
                            ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", -1));
                            ini_close();
                            ini_open(global.cardConsINI);
                            InfoStore = "Info"+string(ini_read_real(ConsStore,"Info Cards", -1));
                            ini_close();
                        }
                        
                    }  
                    if(e ==3)
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 1) 
                        {     
                            EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                
                            ini_close();
                            ini_open(global.cardEventINI);
                            CharStore = "Char"+string(ini_read_real(EventStore,"Char Cards", -1));
                            ini_close();
                            ini_open(global.cardCharINI);
                            InfoStore = "Info"+string(ini_read_real(CharStore,"Info Cards", -1));
                            ini_close();
                                         
                        }
                        if(Week &lt;= global.playerWeek)
                        {
                            Week +=1;  
                            e = 0;
                        }

                    }                 
                    if("Info"+string(i) == InfoStore &amp;&amp; ds_list_find_index(listtemo,"Info"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,InfoStore) 
                        e = 0;
                        cardNum += 1;

                    }
                }



            }
            if(ds_list_size(listtemo)  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength + global.tempPos; i++)
            {
                global.InfoLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
             
        }
        if(global.ListStyle == 1)
        {
            //this code is to make sure that the list length doesnt exceed 20
            for(e = 0; e &lt; 4; e++)
            {    
                for(i = 0; i &lt;= global.totalInfoCards; i++)
                {        
                    if(e ==0)//events info
                    {
                        ini_open(global.historyINI);
                        EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                
                        ini_close();
                        ini_open(global.cardEventINI);
                        InfoStore = "Info"+string(ini_read_real(EventStore,"Info Cards", -1));
                        ini_close();
                    }
                    if(e ==1)//actions info
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                        {     
                            ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                            ini_close();
                            ini_open(global.cardActionINI);
                            InfoStore = "Info"+string(ini_read_real(ActionStore,"Info Cards", -1));
                            ini_close();
                        }
                    }
                    if(e ==2)
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 0) 
                        {    
                            ActionStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Action", "");                
                            ini_close();
                            ini_open(global.cardActionINI);
                            ConsStore = "Cons"+string(ini_read_real(ActionStore,"Cons Cards", -1));
                            ini_close();
                            ini_open(global.cardConsINI);
                            InfoStore = "Info"+string(ini_read_real(ConsStore,"Info Cards", -1));
                            ini_close();
                        }
                        
                    }  
                    if(e ==3)
                    {
                        ini_open(global.historyINI);
                        if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 1) 
                        {     
                            EventStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Event", "");                
                            ini_close();
                            ini_open(global.cardEventINI);
                            CharStore = "Char"+string(ini_read_real(EventStore,"Char Cards", -1));
                            ini_close();
                            ini_open(global.cardCharINI);
                            InfoStore = "Info"+string(ini_read_real(CharStore,"Info Cards", -1));
                            ini_close();
                                         
                        }
                        if(Week &lt;= global.playerWeek)
                        {
                            Week +=1;  
                            e = 0;
                        }
                    }                       
                    if("Info"+string(i) == InfoStore &amp;&amp; ds_list_find_index(listtemo,"Info"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,InfoStore) 
                        e = 0;
                        i = 0;
                        cardNum += 1;

                    }
                }



            }
            if(ds_list_size(listtemo)  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength + global.tempPos; i++)
            {
                global.InfoLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                    tempY = global.roomHeight/2;
                    tempX = (global.roomWidth / 6)-25;
                    inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);   
            }
             
        }
           
        
    }
    if(global.RoomState == 4)//Character
    {
        listtemo = ds_list_create();
        if(global.ListStyle == 0)
        {
            //this code is to make sure that the list length doesnt exceed 20
            for(i = 0; i &lt;= global.totalCharCards; i++)
            {
                    ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 1)                
                        CharStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Char", "");                
                    else
                        CharStore = "NONE";
                    ini_close();
                    if("Char"+string(i) == CharStore &amp;&amp; ds_list_find_index(listtemo,"Char"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,CharStore) 
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 20)
            {
                global.listLength = 20;   
            }
            else
            {
                global.listLength = 20 - (20 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.CharLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
            //used to display the lists of card, works the same as previously
            
        }
        if(global.ListStyle == 1)
        {
        //this code is to make sure that the list length doesnt exceed 20

            for(i = 0; i &lt;= global.totalCharCards; i++)
            {
                    ini_open(global.historyINI);
                    if(ini_read_real("Year"+string(Year) + " - Week"+string(Week),"Char Selected", -1) == 1)                
                        CharStore = ini_read_string("Year"+string(Year) + " - Week"+string(Week),"Char", "");                
                    else
                        CharStore = "NONE";
                    ini_close();
                    if("Char"+string(i) == CharStore &amp;&amp; ds_list_find_index(listtemo,"Char"+string(i)) == -1)//checks to see if the event is the currently loaded event and adds it to the list if not already on the listtemo
                    {
                        ds_list_add(listtemo,CharStore) 
                        i = 0;
                        cardNum += 1;
                        Week +=1;
                    }

            }
            if(ds_list_size(listtemo)  &gt;= 4)
            {
                global.listLength = 4;   
            }
            else
            {
                global.listLength = 4 - (4 - ds_list_size(listtemo));
            }
            global.cardListNum = ds_list_size(listtemo);
            ds_list_sort(listtemo,true);//sorts the list
            //displays the list
            for(i = global.tempPos; i &lt; global.listLength+global.tempPos; i++)
            {
                global.CharLoadName = ds_list_find_value(listtemo,i)
                script_execute(LoadCards);
                    tempY = global.roomHeight/2;
                    tempX = (global.roomWidth / 6)-25;
                    inst = instance_create(tempX + 300*(i-global.tempPos),tempY,CardBacking);    
            }
            //used to display the lists of card, works the same as previously

        }
    }
}
if(room == RoomDiary)
{
    ini_open(global.historyINI);
    if(ini_section_exists("Year"+string(global.JYear) + " - Week"+string(global.JWeek)))
    {
        script_execute(LoadHistory);  
        textFeilds = 7;//number of text boxes we want.
        for(i = 0; i &lt; textFeilds; i++)
        {      
            if(i == 0)
            {
            inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }          
            if(i == 1)
            {

            global.RoomState = 0;
            global.EventLoadName = global.EventStore
            script_execute(LoadCards);  
            inst = instance_create((global.roomWidth/5)*3,global.roomHeight/2,CardBacking);     
            }
            if(i == 2)
            {

                if(global.CharSelected == 0)
                {
                    global.RoomState = 1;
                    global.ActionLoadName = global.ActionStore
                }
                else
                {
                    global.RoomState = 4;
                    global.CharLoadName = global.CharStore
                }
                script_execute(LoadCards);  
                inst = instance_create(((global.roomWidth/5)*3)+300,global.roomHeight/2,CardBacking);       
            }
            if(i == 3)
            {
                //int
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
            if(i == 4)
            {   
                //Char
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 25;
                global.tempTextBoxY += 25;
            }
            if(i == 5)
            {
                //Well
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 50;
                global.tempTextBoxY += 50;
            }
            if(i == 6)
            {
                inst = instance_create(global.roomWidth/5,global.tempInputBoxY,TextInputBox);     
                global.tempInputBoxY += 75;
                global.tempTextBoxY += 75;
            }
        }
    }
    ini_close();
}
}

if(room == RoomCharacter)
{
        textFeilds = 4;//number of text boxes we want.
        for(i = 0; i &lt; textFeilds; i++)
        {      
        
            inst = instance_create(global.tempInputBoxX,global.tempInputBoxY,TextInputBox);     
            global.tempInputBoxY += 25;
            global.tempTextBoxY += 25;
        }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.focus = 0;
if(room == RoomDiary)
{
    ini_open(global.historyINI);
    if(ini_section_exists("Year"+string(global.JYear) + " - Week"+string(global.JWeek)))
    {
        script_execute(SaveHistory);
    }
    ini_close();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
