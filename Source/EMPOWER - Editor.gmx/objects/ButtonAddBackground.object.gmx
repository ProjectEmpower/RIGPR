<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ButtonSpriteAddBackground</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sets positions
x = global.roomWidth /2;
y = global.roomHeight /2-50;
//sets defaults for text used within the object
Background = "";
BackgroundF = "";
BackgroundN = "";
BackgroundFN = "";
BackgroundS = "";
BackgroundFS = "";
//sets up the room variable for when called later
tempRoom = room;
//sets up the background sizes so that they display correctly after being edited.
background_xscale[0] = 1 * ((room_width) / background_width[0]);
background_yscale[0] = 1 * ((room_height) / background_height[0]);
background_xscale[1] = 1 * ((room_width) / background_width[1]);
background_yscale[1] = 1 * ((room_height) / background_height[1]);
background_xscale[2] = 1 * ((room_width) / background_width[2]);
background_yscale[2] = 1 * ((room_height) / background_height[2]);
background_xscale[3] = 1 * ((room_width) / background_width[3]);
background_yscale[3] = 1 * ((room_height) / background_height[3]);
background_xscale[4] = 1 * ((room_width) / background_width[4]);
background_yscale[4] = 1 * ((room_height) / background_height[4]);
background_xscale[5] = 1 * ((room_width) / background_width[5]);
background_yscale[5] = 1 * ((room_height) / background_height[5]);
//hides the button when on the splash screen initlally
if(room == RoomMenu and global.BackgroundSetup == false)
    sprite_index = No_sprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//When clicked, this will instigate the process of adding a button, see dialog object.
if(room == RoomMenu)
    BackgroundS = show_message_async("Please select a 'Tap to Start' splash background. Backgrounds must either be 1920x1080 or 1280x720."); 
else
    Background = show_message_async("Please select a background to use. Backgrounds must either be 1920x1080 or 1280x720.");
                
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
