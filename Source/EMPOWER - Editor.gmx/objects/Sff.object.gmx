<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ButtonSpriteAddBackground</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = global.roomWidth /2;
y = global.roomHeight /2-50;
Background = "";
BackgroundF = "";
BackgroundN = "";
BackgroundFN = "";
BackgroundS = "";
BackgroundFS = "";

tempRoom = room;
background_xscale[0] = 1 * ((room_width) / background_width[0]);
background_yscale[0] = 1 * ((room_height) / background_height[0]);
background_xscale[1] = 1 * ((room_width) / background_width[0]);
background_yscale[1] = 1 * ((room_height) / background_height[0]);
background_xscale[2] = 1 * ((room_width) / background_width[0]);
background_yscale[2] = 1 * ((room_height) / background_height[0]);
background_xscale[3] = 1 * ((room_width) / background_width[0]);
background_yscale[3] = 1 * ((room_height) / background_height[0]);
background_xscale[4] = 1 * ((room_width) / background_width[0]);
background_yscale[4] = 1 * ((room_height) / background_height[0]);
background_xscale[5] = 1 * ((room_width) / background_width[0]);
background_yscale[5] = 1 * ((room_height) / background_height[0]);
if(room == RoomMenu and global.BackgroundSetup == false)
    sprite_index = No_sprite;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == RoomMenu)
    BackgroundS = show_message_async("Please select a 'Tap to Start' splash background"); 
else
    BackgroundS = show_message_async("Please select a background to use");
                
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i_d = ds_map_find_value(async_load,"id");

if(i_d == BackgroundS)
{
    BackgroundFS = get_open_filename("PNG|*.png", "");//opens the file
    if(BackgroundFS != "")//if it finds a file, do this
    {    
        BackgroundN = show_message_async("Please select a 'Click to Start' splash background"); 
        BackgroundS = "";
    }
    else
    {
        show_message_async("Splash backgrounds failed to uploaded.");
    }    
}
if(i_d == BackgroundN)
{
    BackgroundFN = get_open_filename("PNG|*.png", "");//opens the file
    if(BackgroundFN != "")
    {
       show_message_async("Splash backgrounds uploaded."); 
    }
    else
    {
        show_message_async("Splash backgrounds failed to uploaded.");
    }
}
if(BackgroundFN != "" and BackgroundFS != "")
{    
    spriteName = "SplashBackground"
    global.MenuBG = background_add(BackgroundFS,0,0);
    background_save(global.MenuBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files

    BackgroundS = "";
    spriteName = "SplashClickBackground"
    global.MenuClickBG = background_add(BackgroundFN,0,0);
    background_save(global.MenuClickBG , "editor_files/BG/"+spriteName+".png");//saves the sprite to the editor files
    room_set_background(RoomMenu, 0, 1, 0, global.MenuClickBG, 0, 0, 0, 0, 0, 0, 1);
    global.MenuBGing = 1;
    global.MenuBG = "";
    global.MenuClickBG = "";
    BackgroundN = "";
    ini_open(global.editorINI);//opens the editorINI
    ini_write_real("General","Character Background",global.CharacterBGing);
    ini_write_real("General","Diary Background",global.DiaryBGing);
    ini_write_real("General","Cards Background",global.CardsBGing);
    ini_write_real("General","Menu Background",global.MenuBGing);
    ini_write_real("General","New Game Background",global.NewGBGing);
    ini_write_real("General","Player Menu Background",global.PlayerMenuBGing);      
    ini_write_real("General","Event Cards Background",global.EventCardBGing);
    ini_write_real("General","Action Cards Background",global.ActionCardBGing);
    ini_write_real("General","Cons Cards Background",global.ConsCardBGing);
    ini_write_real("General","Info Cards Background",global.InfoCardBGing);
    ini_write_real("General","Char Cards Background",global.CharCardBGing);
    ini_close();//closes the ini
    room = tempRoom;//reloads the room
}   

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
